<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-manual-w3c-tests" category="W3C/HTML5 APIs">
    <set name="csp">
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_sandbox_empty_int" purpose="Check if user agent is unable to use javascript internal when sandbox is empty.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_sandbox_empty_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_sandbox_empty_ext" purpose="Check if user agent is unable to use javascript in external when sandbox is empty.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_sandbox_empty_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_sandbox_empty_event" purpose="Check if user agent is unable to use javascript in event handler when sandbox is empty.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_sandbox_empty_event.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_sandbox_empty_inline" purpose="Check if user agent is unable to use javascript inline when sandbox is empty.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_sandbox_empty_inline.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_img_allowed" purpose="Check if user agent is able to use internal image resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_img_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_img_blocked" purpose="Check if user agent is unable to use external image resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_img_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_object_allowed" purpose="Check if user agent is able to use internal object resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_object_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_object_blocked" purpose="Check if user agent is unable to use external object resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_object_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_font_allowed" purpose="Check if user agent is able to use external font resource when default-src is cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_font_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_font_blocked" purpose="Check if user agent is unable to use internal font resource when default-src is cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_font_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_none_font_blocked_ext" purpose="Check if user agent is unable to use external font resource when default-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_none_font_blocked_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_none_font_blocked_int" purpose="Check if user agent is unable to use internal font resource when default-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_none_font_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_font_allowed" purpose="Check if user agent is able to use internal font resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_font_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_font_blocked" purpose="Check if user agent is able to use external font resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_font_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_multi_font_allowed_one" purpose="Check if user agent is able to use the first allowed external font resource when default-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_multi_font_allowed_one.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_multi_font_allowed_two" purpose="Check if user agent is able to use the second allowed external font resource when default-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_multi_font_allowed_two.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_multi_font_blocked" purpose="Check if user agent is unable to use the not allowed external font resource when default-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_multi_font_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_cross-origin_multi_font_blocked_int" purpose="Check if user agent is unable to use the internal font resource when default-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_cross-origin_multi_font_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_frame_allowed" purpose="Check if user agent is able to use internal frame resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_frame_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_default-src_self_frame_blocked" purpose="Check if user agent is unable to use external default resource when default-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_default-src_self_frame_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external font resource when font-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_asterisk_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal font resource when font-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_asterisk_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_allowed" purpose="Check if user agent is able to use external font resource when font-src is cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_blocked" purpose="Check if user agent is unable to use internal font resource when font-src is cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_none_blocked_ext" purpose="Check if user agent is unable to use external font resource when font-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_none_blocked_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_none_blocked_int" purpose="Check if user agent is unable to use internal font resource when font-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_none_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_self_allowed" purpose="Check if user agent is able to use internal font resource when font-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_self_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_self_blocked" purpose="Check if user agent is unable to use external font resource when font-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_self_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external font resource when font-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_multi_allowed_one.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second allowed external font resource when font-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_multi_allowed_two.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not allowed external font resource when font-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_multi_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_font-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal font resource when font-src is multi cross origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_font-src_cross-origin_multi_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_font-src_self_allowed_ext" purpose="Check if user agent is able to use external font resource when font-src is self in report only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_font-src_self_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_font-src_self_allowed_int" purpose="Check if user agent is able to use internal font resource when font-src is self in report only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_font-src_self_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external frame resource when frame-src is asterisk.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_asterisk_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal frame resource when frame-src is asterisk.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_asterisk_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_allowed" purpose="Check if user agent is able to use external frame resource when frame-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_blocked" purpose="Check if user agent is unable to use not allowed eternal frame resource when frame-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal frame resource when frame-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first external frame resource when frame-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_multi_allowed_one.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second external frame resource when frame-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_multi_allowed_two.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not allowed external frame resource when frame-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_multi_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal frame resource when frame-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_cross-origin_multi_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_none_blocked_ext" purpose="Check if user agent is unable to use external frame resource when frame-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_none_blocked_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_none_blocked_int" purpose="Check if user agent is unable to use internal frame resource when frame-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_none_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_self_allowed" purpose="Check if user agent is able to use internal frame resource when frame-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_self_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_frame-src_self_blocked" purpose="Check if user agent is unable to use external frame resource when frame-src is self.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_frame-src_self_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external image resource when img-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_asterisk_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal image resource when img-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_asterisk_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_allowed" purpose="Check if user agent is able to use external image resource when img-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_blocked" purpose="Check if user agent is unable to use not-allowed external image resource when img-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal image resource when img-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external image resource when img-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_multi_allowed_one.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-two" purpose="Check if user agent is able to use the second allowed external image resource when img-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_multi_allowed_two.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not-allowed external image resource when img-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_multi_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal image resource when img-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_cross-origin_multi_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_none_blocked_ext" purpose="Check if user agent is unable to use the external image resource when img-src is 'none'.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_none_blocked_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_none_blocked_int" purpose="Check if user agent is unable to use the internal image resource when img-src is 'none'.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_none_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_self_allowed" purpose="Check if user agent is able to use the internal image resource when img-src is 'self'.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_self_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_img-src_self_blocked" purpose="Check if user agent is unable to use the external image resource when img-src is 'self'.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_img-src_self_blocked.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_img-src_self_allowed_ext" purpose="Check if user agent is able to use the external image resource when img-src is 'self' in report-only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_img-src_self_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_img-src_self_allowed_int" purpose="Check if user agent is able to use the internal image resource when img-src is 'self' in report-only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_img-src_self_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external image resource when object-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_asterisk_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal image resource when object-src is *.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_asterisk_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_cross-origin_allowed" purpose="Check if user agent is able to use external image resource when object-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_cross-origin_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external image resource when object-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_cross-origin_multi_allowed_one.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_cross-two" purpose="Check if user agent is able to use the second allowed external image resource when object-src is multi cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_cross-origin_multi_allowed_two.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_object-src_self_allowed" purpose="Check if user agent is able to use the internal image resource when object-src is 'self'.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_object-src_self_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_object-src_self_allowed_ext" purpose="Check if user agent is able to use the external image resource when object-src is 'self' in report-only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_object-src_self_allowed_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_ro_object-src_self_allowed_int" purpose="Check if user agent is able to use the internal image resource when object-src is 'self' in report-only mode.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_ro_object-src_self_allowed_int.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_none" purpose="Check if user agent is unable to use script resource when script-src is none.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_none.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_cross-origin" purpose="Check if user agent is unable to use the inline script resource when script-src is cross-origin.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_cross-origin.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_unsafe-inline_allowed" purpose="Check if user agent is able to use the inline script resource when script-src is only unsafe-inline.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_unsafe-inline_allowed.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_cross-origin_block_inline" purpose="Check if user agent is unable to use the inline script resource when there is no 'unsafe-inline' in script-src.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_cross-origin_block_inline.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_unsafe-inline_allowed_event" purpose="Check if user agent is able to use the inline script called by event resource when script-src is only unsafe-inline.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_unsafe-inline_allowed_event.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_unsafe-inline_allowed_iframe" purpose="Check if user agent is able to use the inline script in iframe resource when script-src is only unsafe-inline.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_unsafe-inline_allowed_iframe.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_unsafe-inline_blocked_ext" purpose="Check if user agent is unable to use the external script resource when script-src is only unsafe-inline.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_unsafe-inline_blocked_ext.cgi</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Security/Content Security Policy" execution_type="manual" id="csp_script-src_unsafe-inline_blocked_int" purpose="Check if user agent is unable to use the internal script resource when script-src is only unsafe-inline.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/csp/csp_script-src_unsafe-inline_blocked_int.cgi</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="audio">
      <testcase component="WebAPI/Media/HTML5 The audio element (Partial)" execution_type="manual" id="audio_loop_current_media_controller" purpose="Check if the audio element has a current media controller that expecting the loop attribute has no effect">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/audio/w3c/audio_loop_current_media_controller.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="widgetpolicy">
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_do_not_load_image" purpose="According to the default policy, a user agent must deny to access the external network image.">
        <description>
          <pre_condition>Make sure do_not_load_image.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch do_not_load_image.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_do_not_load_script" purpose="According to the default policy, a user agent must deny to access the external network script.">
        <description>
          <pre_condition>Make sure do_not_load_script.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_script.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch do_not_load_script.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_script.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_do_not_load_iframe" purpose="According to the default policy, a user agent must deny to access the external network iframe.">
        <description>
          <pre_condition>Make sure do_not_load_iframe.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_iframe.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch do_not_load_iframe.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_iframe.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_script" purpose="A user agent should grant access to network script resources listed in the access-request list.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_script.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_script.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_script.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_script.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image" purpose="A user agent should grant access to network image resources listed in the access-request list.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_iframe" purpose="A user agent should grant access to network frame resources listed in the access-request list.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_iframe.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_iframe.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_iframe.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud and a "...testing..." image is displayed in the gray frame</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_iframe.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_and_script" purpose="When a user agent grants access to a given set of network resources, it must do equally for APIs and markup.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_and_script.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_and_script.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_and_script.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_and_script.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_text_over_xhr" purpose="When a user agent grants access to a given set of network text resources, it must do equally for APIs and markup.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_text_over_xhr.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_text_over_xhr.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_text_over_xhr.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_text_over_xhr.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_block_loading_text_over_xhr" purpose="When a user agent is not grant access to network resources, it should deny access requests.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure block_loading_text_over_xhr.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/block_loading_text_over_xhr.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch block_loading_text_over_xhr.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" and "An exception was thrown: 'error'" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/block_loading_text_over_xhr.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_dir_ltr" purpose="Test that dir 'ltr' does not affect &lt;access&gt; element.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_dir_ltr.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_ltr.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_dir_ltr.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_ltr.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_dir_rtl" purpose="Test that dir 'rtl' does not affect &lt;access&gt; element.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_dir_rtl.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_rtl.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_dir_rtl.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_rtl.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_dir_lro" purpose="Test that dir 'lro' does not affect &lt;access&gt; element.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_dir_lro.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_lro.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_dir_lro.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_lro.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_dir_rlo" purpose="Test that dir 'rlo' does not affect &lt;access&gt; element.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_dir_rlo.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_rlo.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_dir_rlo.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_dir_rlo.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_with_missing_origin" purpose="Test that the user agent ignores &lt;access&gt; elements with no origin attribute.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_with_missing_origin.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_with_missing_origin.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_with_missing_origin.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_with_missing_origin.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_wildcard_support" purpose="Test that the user agent can process and support a &lt;access&gt; element with a wildcard ('*') origin.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure wildcard_support.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/wildcard_support.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch wildcard_support.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/wildcard_support.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_invalid_uri_1" purpose="Test that the user agent ignores &lt;access&gt; element with an origin containing an invalid IRI.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_invalid_uri_1.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_1.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_invalid_uri_1.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_1.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_invalid_uri_2" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that uses the HTTP scheme and invalid host component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_invalid_uri_2.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_2.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_invalid_uri_2.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_2.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_invalid_uri_3" purpose="Test that the user agent ignores an invalid origin attribute value.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_invalid_uri_3.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_3.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_invalid_uri_3.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen showa "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_invalid_uri_3.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_no_authority" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that does not contain an authority component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_no_authority.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_no_authority.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_no_authority.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_no_authority.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_iuserinfo" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that contains an iuserinfo component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_iuserinfo.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_iuserinfo.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_iuserinfo.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_iuserinfo.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_path_component_1" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that contains a path component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_path_component_1.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_path_component_1.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_path_component_1.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_path_component_1.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_no_host" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that has no host component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_no_host.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_no_host.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_no_host.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_no_host.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_query_component" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that contains a query component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_query_component.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_query_component.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_query_component.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_query_component.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_fragment" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that has a fragment component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_fragment.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_fragment.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_fragment.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_fragment.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_element_with_http_no_host" purpose="Test that the user agent ignores &lt;access&gt; element with an origin that uses the HTTP scheme and has no host component.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_element_with_http_no_host.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_http_no_host.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_element_with_http_no_host.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_element_with_http_no_host.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_from_subdomain1" purpose="Test that the user agent processes &lt;access&gt; element when subdomains attribute is true.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_from_subdomain1.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_subdomain1.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_from_subdomain1.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_subdomain1.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_do_not_load_image_from_subdomain1" purpose="Test that the user agent processes &lt;access&gt; element when subdomains attribute is false.">
        <description>
          <pre_condition>Make sure do_not_load_image_from_subdomain1.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image_from_subdomain1.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch do_not_load_image_from_subdomain1.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image_from_subdomain1.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_do_not_load_image_from_subdomain2" purpose="Test that the subdomains attribute is false by defalt when it is missing.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure do_not_load_image_from_subdomain2.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image_from_subdomain2.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch do_not_load_image_from_subdomain2.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/do_not_load_image_from_subdomain2.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_from_port_80" purpose="Test that the user agent assumes port 80 for the http protocol.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_from_port_80.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_80.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_from_port_80.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" with green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_80.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_from_port_83" purpose="Test that the user agent processes &lt;access&gt; element with an explicit non-standard port number.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_from_port_83.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_83.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_from_port_83.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_83.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_from_port_443" purpose="Test that the user agent processes can assume the default port number of https.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_from_port_443.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_443.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_from_port_443.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" with green backgroud and a gray background of "...testing..." image is displayed.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_from_port_443.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_ignore_access_with_unsupported_scheme" purpose="Test that the user agent ignores &lt;access&gt; element with an unsupported scheme.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure ignore_access_with_unsupported_scheme.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_with_unsupported_scheme.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ignore_access_with_unsupported_scheme.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/ignore_access_with_unsupported_scheme.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_load_image_using_toASCII" purpose="Test that the user agent processes &lt;access&gt; elements using the ToASCII algorithm as defined in RFC3490.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure load_image_using_toASCII.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_using_toASCII.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch load_image_using_toASCII.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The "PASS" and "ICANN" logo are displayed on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/load_image_using_toASCII.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_HTTP_compare_hosts_in_a_case-insensitive_manner" purpose="Test that the user agent must compare hosts in a case-insensitive manner when the scheme is 'http'.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure HTTP_compare_hosts_in_a_case-insensitive_manner.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/HTTP_compare_hosts_in_a_case-insensitive_manner.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch HTTP_compare_hosts_in_a_case-insensitive_manner.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/HTTP_compare_hosts_in_a_case-insensitive_manner.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Access Request Policy" execution_type="manual" id="WidgetPolicy_HTTPS_compare_hosts_in_a_case-insensitive_manner" purpose="Test that the user agent must compare hosts in a case-insensitive manner when the scheme is 'https'.">
        <description>
          <pre_condition>Make sure the device can access to the network; Make sure HTTPS_compare_hosts_in_a_case-insensitive_manner.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetpolicy/w3c/HTTPS_compare_hosts_in_a_case-insensitive_manner.wgt.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch HTTPS_compare_hosts_in_a_case-insensitive_manner.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green backgroud.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetpolicy/w3c/HTTPS_compare_hosts_in_a_case-insensitive_manner.wgt</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="widgetpackaging">
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dc" purpose="Test the UA's support for explicitly setting the valid mime type of a file using the type attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/dc.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of dc.wgt with the command :"wrt-launcher -l" and launch the dc.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_bj" purpose="Test if the UA can locate the icon at the root of the widget package.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/bj.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the bj widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_bk" purpose="Test if the UA can locate the icon in a locale folder.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/bk.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the bk widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_bl" purpose="Test if the UA can locate the icon in a locale folder and at the root of the widget package.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/bl.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the bl widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_bo" purpose="Test if the UA can load default icons in the correct order.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/bo.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the bo widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" and "png" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_d1" purpose="Test if the UA can process icon elements without a src attribute correctly.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/d1.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the d1 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_d2" purpose="Test if the UA can handle the situation where a path points to an icon which does not exist.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/d2.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the d2 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_cc" purpose="Test if the UA can select start files in the appropriate order.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/cc.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of cc.wgt with the command :"wrt-launcher -l" and launch the cc.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_bq" purpose="Test if the UA can ignore subsequent repetitions of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/bq.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of bq.wgt with the command :"wrt-launcher -l" and launch the bq.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_ad" purpose="Test if the UA can treat default icon at the root of the widget package name case-sensitively.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ad.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the ad widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_ae" purpose="Test if the UA can treat default icon name case-sensitively.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ae.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the ae widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_am" purpose="Test if the UA can process the author href attribute correctly.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/am.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of am.wgt with the command :"wrt-launcher -l" and launch the am.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_aw" purpose="Test that the user agent does not attempt to load a default start file when a custom start file has been declared.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/aw.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of aw.wgt with the command :"wrt-launcher -l" and launch the aw.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dlocuse00" purpose="Test that the value of defaultlocale is also used in folder-based localization.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ta-de-000.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ta-de-000.wgt with the command :"wrt-launcher -l" and launch the ta-de-000.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_ga" purpose="Test if the UA can process icon elements with an empty src attribute correctly.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ga.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the ga widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_gb" purpose="Test if the UA can handle a content element with an empty src attribute correctly.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/gb.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of gb.wgt with the command :"wrt-launcher -l" and launch the gb.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i1" purpose="Test if the UA can process the height attribute of an icon.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i1.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i1 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro23" purpose="Test that LRO direction does not apply to the src attribute of the icon element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro23.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i18nlro23 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro26" purpose="Test that LRO direction does not apply to the src attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro26.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nlro26.wgt with the command :"wrt-launcher -l" and launch the i18nlro26.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro27" purpose="Test that LRO direction does not apply to the type attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro27.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nlro27.wgt with the command :"wrt-launcher -l" and launch the i18nlro27.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro28" purpose="Test that LRO direction does not apply to the encoding attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro28.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nlro28.wgt with the command :"wrt-launcher -l" and launch the i18nlro28.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>The correct picture can be displayed according to the successful description on screen.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nltr23" purpose="Test that LTR direction does not apply to the src attribute of the icon element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nltr23.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i18nltr23 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nltr26" purpose="Test that LTR direction does not apply to the src attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nltr26.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nltr26.wgt with the command :"wrt-launcher -l" and launch the i18nltr26.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nltr27" purpose="Test that LTR direction does not apply to the type attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nltr27.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nltr27.wgt with the command :"wrt-launcher -l" and launch the i18nltr27.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nltr28" purpose="Test that LTR direction does not apply to the encoding attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nltr28.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nltr28.wgt with the command :"wrt-launcher -l" and launch the i18nltr28.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>The correct picture can be displayed according to the successful description on screen.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrlo23" purpose="Test that RLO direction does not apply to the src attribute of the icon element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrlo23.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i18nrlo23 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrlo26" purpose="Test that RLO direction does not apply to the src attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrlo26.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrlo26.wgt with the command :"wrt-launcher -l" and launch the i18nrlo26.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrlo27" purpose="Test that RLO direction does not apply to the type attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrlo27.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrlo27.wgt with the command :"wrt-launcher -l" and launch the i18nrlo27.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrlo28" purpose="Test that RLO direction does not apply to the encoding attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrlo28.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrlo28.wgt with the command :"wrt-launcher -l" and launch the i18nrlo28.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>The correct picture can be displayed according to the successful description on screen.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl23" purpose="Test that RTL direction does not apply to the src attribute of the icon element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl23.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i18nrtl23 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl26" purpose="Test that RTL direction does not apply to the src attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl26.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrtl26.wgt with the command :"wrt-launcher -l" and launch the i18nrtl26.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl27" purpose="Test that RTL direction does not apply to the type attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl27.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrtl27.wgt with the command :"wrt-launcher -l" and launch the i18nrtl27.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl28" purpose="Test that RTL direction does not apply to the encoding attribute of the content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl28.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrtl28.wgt with the command :"wrt-launcher -l" and launch the i18nrtl28.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the correct picture can be displayed according to the successful description on screen.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl43" purpose="Test that RTL direction does not apply to the viewmodes attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl43.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrtl43.wgt with the command :"wrt-launcher -l" and launch the i18nrtl43.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i9" purpose="Test if the UA can process the width attribute of an icon element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i9.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the i9 widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_viewb" purpose="Test if the UA can process the various values applicable to the viewmodes attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/viewb.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of viewb.wgt with the command :"wrt-launcher -l" and launch the viewb.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_viewf" purpose="Test if the UA can process a viewmodes attribute containing an unsupported value.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/viewf.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of viewf.wgt with the command :"wrt-launcher -l" and launch the viewf.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_viewg" purpose="Test if the UA can process a viewmodes attribute containing multiple supported values.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/viewg.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of viewg.wgt with the command :"wrt-launcher -l" and launch the viewg.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_viewi" purpose="Test if the UA can process an empty viewmodes attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/viewi.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of viewi.wgt with the command :"wrt-launcher -l" and launch the viewi.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_xx" purpose="Test if the UA can ignore unknown elements correctly.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/xx.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of xx.wgt with the command :"wrt-launcher -l" and launch the xx.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_za" purpose="Test if the UA can ignore a file which contains the garbage data and can't be processed as an icon format.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/za.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the za widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_zc" purpose="Test if the UA can ignore subsequent declarations to use the same icon.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/zc.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the zc widget logo.</step_desc>
              <expected>To pass, the user agent must select black "PASS" on the round green background as the widget logo.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_zz" purpose="Test if the UA can correctly deal with an icon element that points to a file which is not present in the widget package.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/zz.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Check the zz widget logo.</step_desc>
              <expected>To pass, the icon must be empty.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dlocignore01" purpose="Test that the user agent applies rule for getting a single attribute value from the defaultlocale attribute.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ta-de-001.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ta-de-001.wgt with the command :"wrt-launcher -l" and launch the ta-de-001.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dlocignore02" purpose="Test that the user agent matches obscure, yet valid, language tags.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ta-de-002.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ta-de-002.wgt with the command :"wrt-launcher -l" and launch the ta-de-002.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dlocignore03" purpose="Test that a language tag already part of the UA's locales list is ignored when it is repeated for defaultlocale attribute.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ta-de-003.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ta-de-003.wgt with the command :"wrt-launcher -l" and launch the ta-de-003.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_dlocignore04" purpose="Test that the default locale is added to the end of the user agent's locale list (and does not override the default language, which is assumed to be 'en').">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ta-de-004.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ta-de-004.wgt with the command :"wrt-launcher -l" and launch the ta-de-004.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_as" purpose="Test that an user agent correctly applies the rule to get a single attribute value and the rule for getting text content with normalized white space.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/as.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of as.wgt with the command :"wrt-launcher -l" and launch the as.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_ao" purpose="Test that an user agent correctly processes a name element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/ao.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of ao.wgt with the command :"wrt-launcher -l" and launch the ao.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_d3" purpose="Test if the UA can locate the start file when there is no widget elements to process.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/d3.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of d3.wgt with the command :"wrt-launcher -l" and launch the d3.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_d8" purpose="Test that the user agent skips the content element with the src attribute but loads the default start file according to the first content element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/d8.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of d8.wgt with the command :"wrt-launcher -l" and launch the d8.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_d7" purpose="Test that the user agent skips a content element without the src attribute and loads the default start file.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/d7.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of d7.wgt with the command :"wrt-launcher -l" and launch the d7.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_oa" purpose="Test that an user agent correctly processes a name element with xml:lang attribute.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/oa.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of oa.wgt with the command :"wrt-launcher -l" and launch the oa.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro01" purpose="Test that LRO direction applies to the name element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro01.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nlro01.wgt with the command :"wrt-launcher -l" and launch the i18nlro01.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrtl44" purpose="Test that RTL direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrtl44.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrtl44.wgt with the command :"wrt-launcher -l" and launch the i18nrtl44.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nlro44" purpose="Test that LRO direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nlro44.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nlro44.wgt with the command :"wrt-launcher -l" and launch the i18nlro44.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nltr44" purpose="Test that LTR direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nltr44.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nltr44.wgt with the command :"wrt-launcher -l" and launch the i18nltr44.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Packaging and XML Configuration" execution_type="manual" id="WidgetPackaging_i18nrlo44" purpose="Test that RLO direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install the widget with the command: wrt-installer -i /opt/tct-manual-w3c-tests/widgetpackaging/w3c/i18nrlo44.wgt</step_desc>
              <expected>Widget application is able to be installed successfully.</expected>
            </step>
            <step order="2">
              <step_desc>Get the 'application id' of i18nrlo44.wgt with the command :"wrt-launcher -l" and launch the i18nrlo44.wgt with the command :"wrt-launcher -s 'application id'".</step_desc>
              <expected>To pass, the widget can be started successfully and the screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" />
        </description>
        </testcase>
    </set>
    <set name="widgetinterface">
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_au" purpose="Test that the UA retains the changes made to the storage on subsequent initializations.">
        <description>
          <pre_condition>Make sure au.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/au.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch au.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "Please close the widget and open it again" on gray background.</expected>
            </step>
            <step order="2">
              <step_desc>Restart au.wgt application.</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/au.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_clear-fires-event" purpose="Test that, upon invocation of the clear() method, a user agent queues a task to fire a StorageEvent event at the window object of an iframe contained by the start file.">
        <description>
          <pre_condition>Make sure clear-fires-event.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/clear-fires-event.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch clear-fires-event.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/clear-fires-event.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_return-emtpy-strings" purpose="Test that upon getting any of the attributes from the attributes column of the configuration attributes table, a user agent must return the corresponding value from the 'Values in Table of Configuration Defaults' column.">
        <description>
          <pre_condition>Make sure return-emtpy-strings.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/return-emtpy-strings.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch return-emtpy-strings.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/return-emtpy-strings.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_removeItem-fires-event" purpose="Test that, upon invocation of the removeItem() method, a user agent queues a task to fire a StorageEvent event at the window object of an iframe contained by the start file.">
        <description>
          <pre_condition>Make sure removeItem-fires-event.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/removeItem-fires-event.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch removeItem-fires-event.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/removeItem-fires-event.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_setItem-fires-event" purpose="Test that, upon invocation of the setItem() method, a user agent queues a task to fire a StorageEvent event at the window object of an iframe contained by the start file.">
        <description>
          <pre_condition>Make sure setItem-fires-event.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/setItem-fires-event.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch setItem-fires-event.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/setItem-fires-event.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_ai" purpose="Test if widget.name is set correctly.">
        <description>
          <pre_condition>Make sure ai.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/ai.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch ai.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/ai.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro01" purpose="Test that LRO direction applies to the name element.">
        <description>
          <pre_condition>Make sure i18nlro01.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro01.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro01.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro01.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro02" purpose="Test that LRO direction applies to the short attribute of the name element.">
        <description>
          <pre_condition>Make sure i18nlro02.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro02.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro02.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro02.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro06" purpose="Test that LRO direction applies to the span element within the name element.">
        <description>
          <pre_condition>Make sure i18nlro06.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro06.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro06.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro06.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro10" purpose="Test that nested LRO and RLO directions apply within the name element.">
        <description>
          <pre_condition>Make sure i18nlro10.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro10.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro10.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro10.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro14" purpose="Test that LRO direction is inherited by the name element from the widget element.">
        <description>
          <pre_condition>Make sure i18nlro14.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro14.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro14.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro14.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro15" purpose="Test that LRO direction is inherited by the short attribute of the name element from the widget element.">
        <description>
          <pre_condition>Make sure i18nlro15.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro15.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro15.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro15.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro19" purpose="Test that nested LRO and LTR directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nlro19.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro19.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro19.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro19.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nlro20" purpose="Test that nested LRO and RTL directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nlro20.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro20.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro20.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro20.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nlro21" purpose="Test that nested LRO and LRO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nlro21.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro21.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro21.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro21.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nlro22" purpose="Test that nested LRO and RLO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nlro22.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro22.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro22.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro22.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nltr06" purpose="Test that LTR direction applies to the span element within the name element.">
        <description>
          <pre_condition>Make sure i18nltr06.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr06.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr06.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr06.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nltr10" purpose="Test that nested LTR and RTL directions apply within the name element.">
        <description>
          <pre_condition>Make sure i18nltr10.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr10.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr10.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr10.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nltr20" purpose="Test that nested LTR and RTL directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nltr20.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr20.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr20.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr20.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nltr21" purpose="Test that nested LTR and LRO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nltr21.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr21.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr21.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr21.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nltr22" purpose="Test that nested LTR and RLO directions apply correctly.">
        <description>
          <pre_condition>Make sure i18nltr22.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr22.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr22.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr22.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo10" purpose="Test that nested RLO and LRO directions apply within the name element.">
        <description>
          <pre_condition>Make sure i18nrlo10.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo10.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo10.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo10.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo19" purpose="Test that nested RLO and LTR directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrlo19.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo19.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo19.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo19.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo20" purpose="Test that nested RLO and RTL directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrlo20.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo20.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo20.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo20.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo21" purpose="Test that nested RLO and LRO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrlo21.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo21.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo21.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo21.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo22" purpose="Test that nested RLO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrlo22.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo22.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo22.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo22.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrtl06" purpose="Test that RTL direction applies to the span element within the name element.">
        <description>
          <pre_condition>Make sure i18nrtl06.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl06.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrtl06.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl06.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrtl10" purpose="Test that nested RTL and RTL directions apply within the name element.">
        <description>
          <pre_condition>Make sure i18nrtl10.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl10.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrtl10.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl10.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrtl20" purpose="Test that nested RTL directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrtl20.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl20.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrtl20.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl20.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrtl21" purpose="Test that nested RTL and LRO directions apply correctly to the name element.">
        <description>
          <pre_condition>Make sure i18nrtl21.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl21.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrtl21.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl21.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nltr44" purpose="Test that LTR direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <pre_condition>Make sure i18nltr44.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr44.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nltr44.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nltr44.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrtl44" purpose="Test that RTL direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <pre_condition>Make sure i18nrtl44.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl44.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrtl44.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrtl44.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="i18nlro44" purpose="Test that LRO direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <pre_condition>Make sure i18nlro44.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro44.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nlro44.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nlro44.wgt</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Widget/Widget Interface" execution_type="manual" id="WidgetInterface_i18nrlo44" purpose="Test that RLO direction does not apply to the xml:lang attribute of the widget element.">
        <description>
          <pre_condition>Make sure i18nrlo44.wgt is installed with the command : wrt-installer -i /opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo44.wgt</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Launch i18nrlo44.wgt with the command : wrt-launcher -s 'application id'</step_desc>
              <expected>The screen shows "PASS" on green background.</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-manual-w3c-tests/widgetinterface/w3c/i18nrlo44.wgt</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="video">
      <testcase component="WebAPI/Media/HTML5 The video element (Partial)" execution_type="manual" id="video_000" purpose="Check that a video loads but is not playing, since the default state is paused">
        <description>
          <steps>
            <step order="1">
              <step_desc>Use WRT to check that a video loads but is not playing, since the default state is paused</step_desc>
              <expected>a video loads but is not playing, since the default state is pause</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/video/w3c/video_000.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Media/HTML5 The video element (Partial)" execution_type="manual" id="video_007" purpose="Seeking to a value less than 'startTime' seeks to 'startTime'">
        <description>
          <steps>
            <step order="1">
              <step_desc>Seeking to a value less than 'startTime' seeks to 'startTime'</step_desc>
              <expected>the text 'PASS' appears to the left and the text 'Your browser does not support media elements.' does not appear anywhere on this page</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/video/w3c/video_007.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Media/HTML5 The video element (Partial)" execution_type="manual" id="video_011" purpose="The 'src' IDL attribute of media elements reflects the content attribute (relative URI)">
        <description>
          <steps>
            <step order="1">
              <step_desc>Use WRT to check that the 'src' IDL attribute of media elements reflects the content attribute (relative URI)</step_desc>
              <expected>the text 'PASS' appears to the left and the text 'Your browser does not support media elements.' does not appear anywhere on this page</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/video/w3c/video_011.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Media/HTML5 The video element (Partial)" execution_type="manual" id="video_loop_current_media_controller" purpose="Check if the video element has a current media controller that expecting the loop attribute has no effect">
        <description>
          <steps>
            <step order="1">
              <step_desc>Use WRT to check if the video element has a current media controller that expecting the loop attribute has no effect</step_desc>
              <expected>the video doesn't repeatly play and the text 'The user agent doesn't support media element.' does not appear anywhere on this page</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/video/w3c/video_loop_current_media_controller.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="ui">
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Basic User Interface Module Level 3 (CSS3 UI) (Partial)" execution_type="manual" id="CSS3UI_pseudo-classes_required" purpose="Check if form element required property value is required">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/ui/CSS3UI_pseudo-classes_required.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="transitions">
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Transitions Module Level 3" execution_type="manual" id="css3_transition_tests_entry14" purpose="To check if border-bottom-width can implement transition function normally">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/transitions/webkit/shorthand-border-transitions.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Transitions Module Level 3" execution_type="manual" id="css3_transition_tests_entry23" purpose="To check if shorthand properties transform-origin can implement transition-property function normally">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/transitions/webkit/shorthand-transitions.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Transitions Module Level 3" execution_type="manual" id="css3_transition_tests_entry19" purpose="To check if shorthand properties margin-top can implement transition-property function normally">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/transitions/webkit/shorthand-transitions.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Transitions Module Level 3" execution_type="manual" id="css3_transition_tests_entry18" purpose="To check if shorthand properties padding-top can implement transition-property function normally">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/transitions/webkit/shorthand-transitions.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Transitions Module Level 3" execution_type="manual" id="css3_transition_tests_entry7" purpose="To check if transition: left 4s linear 1s can implement transition-property function normally">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/transitions/webkit/delay.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="touchevent">
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="TouchEvent_altKey_exist" purpose="Check if touchEvent.altKey attribute is defined.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/touchevent/TouchEvent_altKey_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="TouchEvent_ctrlKey_exist" purpose="Check if touchEvent.ctrlKey attribute is defined.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/touchevent/TouchEvent_ctrlKey_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="TouchEvent_metaKey_exist" purpose="Check if touchEvent.metaKey attribute is defined.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/touchevent/TouchEvent_metaKey_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="TouchEvent_shiftKey_exist" purpose="Check if touchEvent.shiftKey attribute is defined.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/touchevent/TouchEvent_shiftKey_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="multitouch_mousedown_event" purpose="Check if touchstart event is dispatched before any mouse event during multiple touches">
        <description>
          <pre_condition>Test device supports touch.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Open the test page: multi-touch.html</step_desc>
              <expected>Page opened with 2 touch boxes</expected>
            </step>
            <step order="2">
              <step_desc>Follow the introduction on the page</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/touchevent/w3c/multi-touch.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="multitouch_touchend_event" purpose="Check if touchend event is received during multiple touches">
        <description>
          <pre_condition>Test device supports touch.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Open the test page: multi-touch.html</step_desc>
              <expected>Page opened with 2 touch boxes</expected>
            </step>
            <step order="2">
              <step_desc>Follow the introduction on the page</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/touchevent/w3c/multi-touch.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Device/Touch Events version 1 (Partial)" execution_type="manual" id="multitouch_touchmove_event" purpose="Check if touchmove event is received during multiple touches">
        <description>
          <pre_condition>Test device supports touch.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Open the test page: multi-touch.html</step_desc>
              <expected>Page opened with 2 touch boxes</expected>
            </step>
            <step order="2">
              <step_desc>Follow the introduction on the page</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/touchevent/w3c/multi-touch.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="text">
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Text Module Level 3 (Partial)" execution_type="manual" id="css3_TextEffects_tests_entry5" purpose="Check that the CSS white-space:nowrap and clear float are identical">
        <description>
          <steps>
            <step order="1">
              <step_desc>Use WRT to visit the "nowrap-clear-float" to check if the CSS white-space:nowrap and clear float are identical</step_desc>
              <expected>The span text should be below the blue square</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/text/webkit/nowrap-clear-float.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Text Module Level 3 (Partial)" execution_type="manual" id="css3_TextEffects_tests_entry6" purpose="To check the CSS white-space:pre-wrap is rendered properly">
        <description>
          <steps>
            <step order="1">
              <step_desc>Use WRT to visit the "pre-wrap-line-test" to check if the CSS white-space:pre-wrap is rendered properly.</step_desc>
              <expected>Multiple consecutive spaces in a webpage browser can truly present</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/text/webkit/pre-wrap-line-test.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="svg">
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_four_rect_svg_in_caption" purpose="Check if SVG inside HTML CAPTION element is parsed  correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_004.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_five_rect_svg_in_form" purpose="Check if SVG inside HTML FORM element is parsed correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_005.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_six_rect_svg_in_html" purpose="Check if SVG inside HTML 'HTML' element is parsed correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_006.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_eleven_rect_svg_in_div_id_style" purpose="Check if SVG elements are styled using ID Selector">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_011.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_thirteen_rect_svg_in_div_class_style" purpose="Check if SVG elements are styled using CLASS Selector">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_013.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="svg_label_inline" purpose="Check if the SVG inside HTML label element parses correctly">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/svg/svg_label_inline.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_one_rect_svg_in_object" purpose="Check if SVG inside HTML OBJECT element is parsed correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_001.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_three_rect_svg_in_button" purpose="Check if SVG inside HTML BUTTON element is parsed correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_003.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 SVG" execution_type="manual" id="foreign_content_eight_rect_svg_in_body" purpose="Check if SVG inside HTML 'BODY' element is parsed correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/svg/w3c/foreign_content_008.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="sessionhistory">
      <testcase component="WebAPI/Communication/HTML5 The session history of browsing contexts (Partial)" execution_type="manual" id="history_forward_basic" purpose="Check if the history.forward method works well.">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the forward button</step_desc>
              <expected>The page is redirected to 002.html</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/sessionhistory/history_forward_basic.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="sandbox">
      <testcase component="WebAPI/Security/HTML5 The iframe element" execution_type="manual" id="attri_default_block_submit" purpose="Block form submission inside iframe with sandbox attribute">
        <description>
          <steps>
            <step order="1">
              <step_desc>Steps:
1. Click button "Submit Form".</step_desc>
              <expected>Test passes if there is no red on the page and there is no navigation in the below iframe after following the above steps</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/sandbox/w3c/sandbox_007.htm</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="pagevisibility">
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_exist_02" purpose="Check if webkitVisibilityState is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_api_exists.htm?total_num=2&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_hideVisibility_match_05" purpose="Check if the hidden attribute inside of the IFrames whose style is 'visibility:hidden' matches the hidden attribute inside of the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_default_overwritten_01" purpose="Check if the hidden attribute inside of the IFrames with default style cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_overwritten_01" purpose="Check if the hidden attribute inside of the root document cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_read_only_conformance.htm?total_num=2&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_hideVisibility_match_06" purpose="Check if the visibilityState attribute inside of the IFrames whose style is 'visibility:hidden' matches the visibilityState attribute inside the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_hideVisibility_exist_02" purpose="Check if the visibilityState attribute inside of the IFrames whose style is 'visibility:hidden' is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_default_match_01" purpose="Check if the hidden attribute inside of the IFrames with default style matches the hidden attribute inside of the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_default_overwritten_03" purpose="Check if the visibilityState attribute inside of the IFrames with default style cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_hideVisibility_overwritten_04" purpose="Check if the hidden attribute inside of the IFrames whose style is 'visibility:hidden' cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_overwritten_02" purpose="Check if visibilityState attribute inside of the root document cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_read_only_conformance.htm?total_num=2&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_noDisplay_overwritten_05" purpose="Check if the hidden attribute inside of the IFrames whose style is 'display:none' cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_default_exist_06" purpose="Check if the visibilityState attribute inside of the IFrames with default style is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_hideVisibility_exist_07" purpose="Check if the hidden attribute inside of the IFrames whose style is 'visibility:hidden' is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_hideVisibility_overwritten_08" purpose="Check if the visibilityState attribute inside of the IFrames whose style is 'visibility:hidden' cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_exist_01" purpose="Check if hidden is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_api_exists.htm?total_num=2&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_noDisplay_exist_09" purpose="Check if the hidden attribute inside of the IFrames whose style is 'display:none' is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_noDisplay_match_04" purpose="Check if the visibilityState attribute inside of the IFrames which style is 'display:none' matches the visibilityState attribute inside of the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_default_exist_10" purpose="Check if the hidden attribute inside of the IFrames with default style is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_default_match_02" purpose="Check if the visibilityState attribute inside of the IFrames with default style matches the visibilityState attribute inside of the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_noDisplay_exist_11" purpose="Check if the visibilityState attribute inside of the IFrames whose style is 'display:none' is defined.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_Hidden_iframe_noDisplay_match_03" purpose="Check if the hidden attribute inside of the IFrames whose style is 'display:none' matches the hidden attribute inside of the root document.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe_visibility.htm?total_num=6&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Page Visibility" execution_type="manual" id="pagevisibility_DocumentVisibility_VisibilityState_iframe_noDisplay_overwritten_12" purpose="Check if the visibilityState attribute inside of the IFrames whose style is 'display:none' cannot be overwritten.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-manual-w3c-tests/pagevisibility/w3c/test_iframe.htm?total_num=12&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="fileapi">
      <testcase component="WebAPI/Storage/File API" execution_type="manual" id="Blob_size_type" purpose="Check the attribute of the interface Blob size is number type">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/fileapi/Blob_size_type.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Storage/File API" execution_type="manual" id="Blob_type_type" purpose="Check if the attribute type value of interface Blob is string type">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/fileapi/Blob_type_type.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Storage/File API" execution_type="manual" id="Blob_type_normal" purpose="Check if the attribute type value of interface Blob return the media type">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/fileapi/Blob_type_normal.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="extra">
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_relative_path" purpose="Check if a.href supports simple anchor with relative path">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_absolute_path" purpose="Check if a.href supports simple anchor with non-relative path">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_empty_string" purpose="Check if a.href supports simple anchor with empty string">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_non_existent" purpose="Check if 'A' element supports no href attribute">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_search_string" purpose="Check if a.href supports advanced anchor with non-relative path containing search string">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_username_password" purpose="Check if a.href supports advanced anchor with non-relative path containing search string, username and password">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Attributes" execution_type="manual" id="anchor_href_uppercase_letters" purpose="Check if a.href supports advanced anchor with non-relative path containing some uppercase letters">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/attributes/w3c/anchor_href.htm?total_num=7&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="area_noref" purpose="Check if xhtml5 area element supports nohref attribute">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click on the Blue Square</step_desc>
              <expected>The square doesn't do anything</expected>
            </step>
            <step order="2">
              <step_desc>Click on the area around the square</step_desc>
              <expected>The square takes you to another page</expected>
            </step>
            <step order="3">
              <step_desc>Click on words "Click here"</step_desc>
              <expected>The link takes you back to the previous page</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/area_noref.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="body_link" purpose="Check xhtml5 body element supports link attribute">
        <description>
          <steps>
            <step order="1">
              <step_desc>Delete your browsing history and navigate to this page again</step_desc>
              <expected>Pass</expected>
            </step>
            <step order="2">
              <step_desc>Check the color of the link "LINK"</step_desc>
              <expected>This LINK should be displayed in yellow</expected>
            </step>
            <step order="3">
              <step_desc>Click on the link "LINK" and click on the "back" link</step_desc>
              <expected>This LINK should take default color of visited link</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/body_link.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="body_text_00ffff" purpose="Check xhtml5 body element supports text attribute in the RGB Hexadecimal color">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/body_text_00ffff.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="html_style_in_comment" purpose="Check if xhtml5 supports css style in comment">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/html_style_in_comment.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="img_border_percent" purpose="Check if xhtml5 img element supports border attribute in percentage">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/img_border_percent.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="object_border_perc" purpose="Check if xhtml5 object element supports border attribute in percentage">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/object_border_perc.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Xhtml5" execution_type="manual" id="object_border_pixel" purpose="Check if xhtml5 object element supports border attribute in pixel">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/xhtml5/w3c/object_border_pixel.xhtml</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="figure_element_support" purpose="Check the figure element visual effect">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/semantics/grouping-content/the-figure-element/figure_element.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="figcaption_element_support" purpose="Check the figcaption element visual effect">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/semantics/grouping-content/the-figcaption-element/figcaption_element.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="textarea_element_maxLength" purpose="Check the textarea maxlength attribute exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Input characters in the input area</step_desc>
              <expected>only input no more than 5 characters in the input area</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/semantics/forms/the-textarea-element/textarea_element_maxLength.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="mark_background_is_yellow" purpose="Check if the mark background is yellow">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/extra/semantics/text-level-semantics/the-mark-element/mark_element_base_usage.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="reversed_on_ol_element" purpose="Check if the reversed attribute on ol element">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/w3c/semantics/grouping-content/the-ol-element/reversed-1a.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Semantics" execution_type="manual" id="hidden_attribute_support" purpose="Check if the hidden attribute support">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/w3c/editing/the-hidden-attribute/hidden-1a.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Browsers" execution_type="manual" id="window_alert_base" purpose="Check if pop the alert dialog">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the alert button</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/browsers/the-window-object/the-window-object/window_alert_base.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Browsers" execution_type="manual" id="window_confirm_base" purpose="Check if pop the confirm dialog">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Confirm button</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/browsers/the-window-object/the-window-object/window_confirm_base.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Browsers" execution_type="manual" id="window_prompt_base" purpose="Check if pop the prompt dialog">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Prompt button</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/browsers/the-window-object/the-window-object/window_prompt_base.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Dom" execution_type="manual" id="document_oninput_event" purpose="Check the document oninput event exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Run the test script file to input content in textarea</step_desc>
              <expected>the 'PASS' will be shown when input content in above textarea</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/dom/documents/the-document-object/document_oninput_event.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/W3C_EXTRAHTML5/Dom" execution_type="manual" id="document_onchange_event" purpose="Check the document onchange event exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Run the test script file to input content and click the other area</step_desc>
              <expected>the 'PASS' will be shown when input content and click the other area</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/extra/dom/documents/the-document-object/document_onchange_event.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="colors">
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry45" purpose="Check that H values in hsl() colors was treated like angles, even if it is outside [0,360).">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t424-hsl-h-rotating-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry43" purpose="Check the basic functioning of hsl() colors.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t424-hsl-basic-a.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry49" purpose="Check the clipping of hsla() values when they are beyond the scope of device gamut.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t425-hsla-clip-outside-device-gamut-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry50" purpose="Check H values in hsla() colors should be treated like angles, even if it is outside [0,360)">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t425-hsla-h-rotating-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry32" purpose="Check that alpha components of rgba() colors greater than 1 are treated to 1">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-clamping-a1.0-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry54" purpose="Check the implementation of algorithm for converting hsla() colors to rgb() colors">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t425-hsla-values-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry46" purpose="Check the rules for parsing of hsl() colors.">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t424-hsl-parsing-f.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry31" purpose="Check that alpha components of rgba() colors less than 0 are treated to 0">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-clamping-a0.0-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry34" purpose="Check that rgba() values produce correct colors">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-func-int-a.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry41" purpose="Check that the 'transparent' color keyword makes colors white transparent">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t423-transparent-1-a.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry37" purpose="Check that whitespace is allowed within rgba() functions">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-func-whitespace-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry35" purpose="Check that rgba() values are only accepted when all integers or all percentages">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-func-no-mixed-f.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry47" purpose="Check the implementation of algorithm for converting hsl() colors to rgb() colors">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t424-hsl-values-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry44" purpose="Check that clipping of hsl() values are outside the device gamut">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t424-hsl-clip-outside-gamut-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry42" purpose="Check that the 'transparent' color keyword makes colors black transparent">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t423-transparent-2-a.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry53" purpose="Check the rules for parsing of hsla() colors">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t425-hsla-parsing-f.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="css3_colors_tests_entry33" purpose="Check clipping of rgba() values are outside the device gamut">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/csswg/t422-rgba-clip-outside-device-gamut-b.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/DOM, Forms and Styles/CSS Color Module Level 3" execution_type="manual" id="CSS3Colors_color_pseudo-classes" purpose="Check the color effect in Pseudo-classes on test div">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/colors/CSS3Colors_color_pseudo-classes.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="canvas">
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_shadow_blur_high" purpose="check if Shadows look correct for large blurs">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.shadow.blur.high.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_fill_maxWidth_large" purpose="Check if fillText function can handle maxWidth correctly">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.fill.maxWidth.large.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_coordinatespace" purpose="Check if Coordinate space goes from top-left to bottom-right">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.coordinatespace.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d.scaled" purpose="Check if CSS-scaled canvases get drawn correctly">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.scaled.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d.text.draw.fill.rtl" purpose="Check if fillText respects Right-To-Left Override characters">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.fill.rtl.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_linestyles_linecap_001" purpose="Check if the square value of lineCap means that a rectangle with the length of the line width and the width of half the line width, placed flat against the edge perpendicular to the direction of the line, must be added at the end of each line.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_linestyles_linecap_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_colorsandstyles_createlineargradient_001" purpose="Check the createLinearGradient method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_colorsandstyles_createlineargradient_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_complexshapes_arcto_001" purpose="Check the arcTo method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_complexshapes_arcto_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_complexshapes_beziercurveto_001" purpose="Check the bezierCurveTo method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_complexshapes_beziercurveto_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_compositing_globalcompositeoperation_001" purpose="Check the globalCompositeOperation attribute of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_compositing_globalcompositeoperation_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_shadows_001" purpose="Check the createLinearGradient method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_shadows_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_state_restore_001" purpose="Check the restore method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_state_restore_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_text_font_001" purpose="Check if ignore 'inherit' property-independent style sheet syntax without assigning a new font value.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_text_font_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="canvas_transformations_scale_001" purpose="Check the scale method of CanvasRenderingContext2D interface.">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/canvas_transformations_scale_001.htm</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_stroke_basic" purpose="Check if the strokeText method can draw stroked text">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.stroke.basic.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_kern_consistent" purpose="Check if the stroked and filled texts have same kerning exactly.">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.kern.consistent.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_fill_basic" purpose="Check if the fillText method  can draw filled text">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.fill.basic.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_fill_maxWidth_zero" purpose="Check if fillText method can handle maxWidth correctly when it is set to 0.">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.fill.maxWidth.zero.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Graphics/HTML5 The canvas element (Partial)" execution_type="manual" id="2d_text_draw_fill_maxWidth_small" purpose="Check if fillText method can handle maxWidth correctly when it is set to 'small'.">
        <description>
          <pre_condition>TBD</pre_condition>
          <test_script_entry test_script_expected_result="0">/opt/tct-manual-w3c-tests/canvas/w3c/2d.text.draw.fill.maxWidth.small.html</test_script_entry>
        </description>
        </testcase>
    </set>
    <set name="nofitication">
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="close_using" purpose="Check if the notification.close method can work">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the notification body</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/close_using.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="notification_body" purpose="Check if the notification body show correct">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/notification_body.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="notification_iconUrl" purpose="Check if the notification iconUrl show correctly">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/notification_iconUrl.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="notification_tag" purpose="Check if the notification tag can work">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/notification_tag.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="onclick_using" purpose="Check if the notification.onclick event can work">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the notification body</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/onclick_using.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="onclose_using" purpose="Check if the notification.onclose event can work">
        <description>
          <steps>
            <step order="1">
              <step_desc>Close the notification</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/onclose_using.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/UI/Web Notifications (Partial)" execution_type="manual" id="onshow_using" purpose="Check if the notification.onshow event can work">
        <description>
          <test_script_entry>/opt/tct-manual-w3c-tests/notification/onshow_using.html</test_script_entry>
        </description>
        </testcase>
    </set>
  </suite>
</test_definition>
