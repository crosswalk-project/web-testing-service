<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-download-tizen-tests" extension="crosswalk" category="Tizen Web Device APIs">
    <set name="Download" type="js">
      <testcase purpose="Check if DownloadManager::start() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::cancel() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_cancel_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_cancel_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::pause() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_pause_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_pause_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::resume() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_resume_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_resume_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getState() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getState_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getState() method returns proper value" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getState_using">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState_using.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the type of each argument is correct for DownloadCallback::onprogress callback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_onprogress">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onprogress.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute DownloadRequest::destination existence and type" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_destination_attribute">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_destination_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute DownloadRequest::fileName existence and type" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_fileName_attribute">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_fileName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::cancel() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_cancel">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_cancel.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getState() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getState">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::pause() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_pause">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_pause.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::resume() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_resume">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_resume.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method with downloadRequest non-optional argument works" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if tizen namespace contains download object and DownloadManagerObject interface is not available" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManagerObject_download_exists">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManagerObject_download_exists.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute DownloadRequest::url existence and type" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_url_attribute">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_url_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method works when extra argument is given" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_with_extra_argument">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_with_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getDownloadRequest() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getDownloadRequest_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getDownloadRequest_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getMIMEType() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getMIMEType_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getMIMEType_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getDownloadRequest() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getDownloadRequest">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getDownloadRequest.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::getMIMEType() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_getMIMEType">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getMIMEType.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method throw an TypeMismatchError when downloadId and downloadCallback are null" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener_null">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadRequest object can have new attribute added" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_extend">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadRequest constructor sets attributes according to arguments given" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_constructor">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadRequest constructor exists" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_exist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method throws exception given wrong downloadCallback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener_downloadCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_downloadCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method throws exception for wrong type of downloadCallback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener_downloadCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_downloadCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::setListener() method with missing non-optional argument throws exception" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_setListener_missarg">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method with mandatory argument missing works" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_missarg">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the DownloadManager object can have new attribute added" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_extend">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadCallback is NoInterfaceObject and not visible" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager is NoInterfaceObject and not visible" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_notexist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if tizen namespace contains download" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_in_tizen">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method throws exception when giving invalid listener" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_downloadCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method throws exception given wrong downloadRequest" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_downloadRequest_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadRequest_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method with downloadCallback optional argument works" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_with_downloadCallback">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_with_downloadCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method throws exception for wrong type of downloadRequest" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_downloadRequest_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadRequest_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManager::start() method throws exception for wrong type of downloadCallback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManager_start_downloadCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the type of each argument is correct for DownloadCallback::onpaused callback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_onpaused">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onpaused.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the type of each argument is correct for DownloadCallback::oncanceled callback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_oncanceled">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_oncanceled.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the type of each argument is correct for DownloadCallback::oncompleted callback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_oncompleted">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_oncompleted.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the type of each argument is correct for DownloadCallback::onfailed callback" onload_delay="90" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadCallback_onfailed">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onfailed.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute DownloadRequest::networkType existence and possible values" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_networkType_attribute">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_networkType_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute DownloadRequest::httpHeader existence and type" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadRequest_httpHeader_attribute">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_httpHeader_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if DownloadManagerObject is NoInterfaceObject and not visible" component="TizenAPI/Content/Download" execution_type="auto" id="DownloadManagerObject_notexist">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManagerObject_notexist.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
