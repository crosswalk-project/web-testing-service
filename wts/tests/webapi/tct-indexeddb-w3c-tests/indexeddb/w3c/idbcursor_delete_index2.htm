<!DOCTYPE html>
<html>
<head>
    <title>IDBCursor.delete() - index - attempt to remove a record in a read-only transaction </title>
    <script type="text/javascript" src="support.js"></script>
    <script src="../../resources/testharness.js"></script>
    <script src="../../resources/testharnessreport.js"></script>
    <script type="text/javascript">
        var objectStoreName = "objectstore";
        var indexName = "index";
        var records = [ { pKey: "primaryKey_0", iKey: "indexKey_0" },
                        { pKey: "primaryKey_1", iKey: "indexKey_1" }];
        var count = records.length;
        var db = null;
        var t = async_test();

        function RunTest() {
            var rqOpen = window.indexedDB.open(databaseName, databaseVersion);
            rqOpen.onupgradeneeded = t.step_func( function (event) {
                db = event.target.result;
                db.onerror = t.step_func( assert_database_error );
                var objStore = db.createObjectStore(objectStoreName, {keyPath:"pKey"});
                objStore.createIndex(indexName, "iKey");
                for(var i = 0; i < records.length; i++) {
                    objStore.add(records[i]);
                }
            });
            rqOpen.onsuccess = t.step_func( CursorDeleteRecord );
            rqOpen.onerror = t.step_func( assert_open_request_error );
        }

        function CursorDeleteRecord(event) {
            var txn = db.transaction(objectStoreName, "readonly");
            var objStore = txn.objectStore(objectStoreName);
            var index = objStore.index(indexName);
            var rqCursor = index.openCursor();
            rqCursor.onsuccess = t.step_func( function(event) {
                var cursor = event.target.result;
                assert_cursor_exists(cursor);
                try {
                    cursor.delete();
                } catch(ex) {
                    assert_equals(ex.name, "ReadOnlyError", "ex.name");
                    t.done();
                    return;
                }
                assert_expected_exception();
            });
        }

        add_completion_callback(function() { if(db) db.close(); });

        setup(function() {
            var rqDelete = window.indexedDB.deleteDatabase(databaseName);
            rqDelete.onsuccess = t.step_func( RunTest );
        });
    </script>
</head>
<body>
    <div id="log"></div>
</body>
</html>
