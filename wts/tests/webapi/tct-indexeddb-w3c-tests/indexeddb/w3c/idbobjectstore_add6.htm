<!DOCTYPE html>
<html>
<head>
    <meta content="text/html; charset=utf-8" http-equiv="content-type" />
    <title> IDBObjectStore.add() - autoIncrement and inline keys </title>
    <script type="text/javascript" src="support.js"></script>
    <script src="../../resources/testharness.js"></script>
    <script src="../../resources/testharnessreport.js"></script>
    <script type="text/javascript">
        var objectStoreName = "objectstore";
        var record = {property:"data"};
        var db = null;
        
        var t = async_test();
        
        function RunTest() {
            var rqOpen = window.indexedDB.open(databaseName, databaseVersion);
            rqOpen.onupgradeneeded = t.step_func(function(event) {
                db = event.target.result;
                db.onerror = t.step_func(assert_database_error);
                var objStore = db.createObjectStore(objectStoreName, {keyPath:"key", autoIncrement:true});
                objStore.add(record);
                objStore.add(record);
                objStore.add(record);
                objStore.add(record);
            });
            rqOpen.onerror = t.step_func(assert_open_request_error);
            rqOpen.onsuccess = t.step_func(VerifyKeysAreCorrect);
        }
        
        function VerifyKeysAreCorrect() {
            var txn = db.transaction(objectStoreName, "readonly");
            var objStore = txn.objectStore(objectStoreName);
            
            var previousValue = null;
            var rqCursor = objStore.openCursor();
            rqCursor.onsuccess = t.step_func(function(event) {
                var cursor = this.result;
                if (cursor) {
                    if (null == previousValue) {
                        previousValue = cursor.value.key;
                        cursor.continue();
                    } else {
                        assert_equals(cursor.value.key, previousValue+1, 'cursor.value.key');
                        previousValue++;
                        cursor.continue();
                    }
                } else {
                    t.done();
                }
            });
        }
        
        add_completion_callback(function() { if(db) db.close(); });
        
        setup(function() {
            var rqDelete = window.indexedDB.deleteDatabase(databaseName);
            rqDelete.onsuccess = t.step_func( RunTest );
        });
    </script>
</head>
<body>
    <div id="log"></div>
</body>
</html>