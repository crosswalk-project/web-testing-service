<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-webaudio-w3c-tests" category="W3C/HTML5 APIs">
    <set name="WebAudio1" type="js">
      <testcase purpose="Check if AnalyserNode.fftSize attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_fftSize_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="fftSize" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.fftSize is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_fftSize_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="fftSize" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.frequencyBinCount attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_frequencyBinCount_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequencyBinCount" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.frequencyBinCount attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_frequencyBinCount_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequencyBinCount" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.frequencyBinCount is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_frequencyBinCount_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequencyBinCount" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getByteFrequencyData method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getByteFrequencyData_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.getByteFrequencyData is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getByteFrequencyData_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getByteTimeDomainData method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getByteTimeDomainData_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteTimeDomainData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.getByteTimeDomainData is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getByteTimeDomainData_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteTimeDomainData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getFloatFrequencyData method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getFloatFrequencyData_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFloatFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.getFloatFrequencyData is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_getFloatFrequencyData_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFloatFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.maxDecibels attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_maxDecibels_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.maxDecibels is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_maxDecibels_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.minDecibels attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_minDecibels_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="minDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.minDecibels attribute is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_minDecibels_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="minDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.smoothingTimeConstant attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_smoothingTimeConstant_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="smoothingTimeConstant" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AnalyserNode.smoothingTimeConstant is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="analysernode_smoothingTimeConstant_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="smoothingTimeConstant" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.duration attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_duration_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="duration" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.duration attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_duration_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="duration" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBuffer.duration is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_duration_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="duration" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.getChannelData method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_getChannelData_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getChannelData" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the return type of AudioBuffer.getChannelData is Float32Array" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_getChannelData_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getChannelData" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.length attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_length_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="length" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.length attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_length_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="length" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBuffer.length is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_length_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="length" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.numberOfChannels attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_numberOfChannels_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.numberOfChannels attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_numberOfChannels_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBuffer.numberOfChannels is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_numberOfChannels_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.sampleRate attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_sampleRate_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.sampleRate attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_sampleRate_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBuffer.sampleRate is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffer_sampleRate_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.buffer attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_buffer_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBufferSourceNode.buffer is AudioBuffer" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_buffer_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loop attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_loop_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBufferSourceNode.loop is boolean" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_loop_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopEnd attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_loopEnd_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopEnd" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopStart attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_loopStart_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopStart" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.playbackRate attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_playbackRate_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackRate" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBufferSourceNode.playbackRate is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_playbackRate_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackRate" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.start method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_start_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="start" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBufferSourceNode.start is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_start_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="start" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.stop method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_stop_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="stop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioBufferSourceNode.stop is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiobuffersourcenode_stop_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="stop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createAnalyser method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createAnalyser_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createAnalyser" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createAnalyser is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createAnalyser_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createAnalyser" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBiquadFilter method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBiquadFilter_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBiquadFilter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBiquadFilter attribute is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBiquadFilter_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBiquadFilter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBuffer_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBuffer" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createBuffer is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBuffer_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBuffer" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBufferSource method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBufferSource_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBufferSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createBufferSource is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createBufferSource_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBufferSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelMerger method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createChannelMerger_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelMerger" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createChannelMerger is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createChannelMerger_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelMerger" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelSplitter method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createChannelSplitter_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelSplitter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createChannelSplitter is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createChannelSplitter_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelSplitter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createConvolver method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createConvolver_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createConvolver" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createConvolver is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createConvolver_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createConvolver" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createDelay method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createDelay_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDelay" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createDelay is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createDelay_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDelay" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createDynamicsCompressor method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createDynamicsCompressor_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDynamicsCompressor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createDynamicsCompressor is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createDynamicsCompressor_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDynamicsCompressor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createGain method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createGain_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createGain" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createGain is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createGain_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createGain" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createMediaElementSource method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createMediaElementSource_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createMediaElementSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createMediaElementSource is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createMediaElementSource_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createMediaElementSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createMediaStreamSource method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createMediaStreamSource_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createMediaStreamSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createMediaStreamSource is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createMediaStreamSource_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createMediaStreamSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio2" type="js">
      <testcase purpose="Check if AudioContext.createOscillator method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createOscillator_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createOscillator" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createOscillator is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createOscillator_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createOscillator" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createPanner method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createPanner_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createPanner" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createPanner is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createPanner_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createPanner" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createScriptProcessor_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createScriptProcessor is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createScriptProcessor_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createWaveShaper method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createWaveShaper_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createWaveShaper" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createPeriodicWave method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createPeriodicWave_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createPeriodicWave" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.createPeriodicWave is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_createPeriodicWave_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createPeriodicWave" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.currentTime attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_currentTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="currentTime" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.currentTime attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_currentTime_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="currentTime" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.currentTime attribute is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_currentTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="currentTime" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.decodeAudioData method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_decodeAudioData_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="decodeAudioData" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.decodeAudioData is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_decodeAudioData_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="decodeAudioData" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.destination attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_destination_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="destination" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.destination attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_destination_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="destination" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.destination is AudioDestinationNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_destination_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="destination" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.listener attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_listener_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="listener" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.listener attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_listener_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="listener" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.listener is AudioListener" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_listener_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="listener" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.sampleRate attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_sampleRate_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.sampleRate attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_sampleRate_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioContext.sampleRate is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiocontext_sampleRate_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.dopplerFactor attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_dopplerFactor_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="dopplerFactor" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioListener.dopplerFactor is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_dopplerFactor_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="dopplerFactor" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setOrientation method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setOrientation_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioListener.setOrientation is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setOrientation_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setPosition method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setPosition_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioListener.setPosition is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setPosition_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setVelocity method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setVelocity_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioListener.setVelocity is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_setVelocity_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.speedOfSound attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_speedOfSound_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="speedOfSound" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioListener.speedOfSound is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audiolistener_speedOfSound_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="speedOfSound" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.connect method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_connect_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioNode.connect is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_connect_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.context attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_context_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="context" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.context attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_context_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="context" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioNode.context is AudioContext" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_context_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="context" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.disconnect method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_disconnect_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioNode.disconnect is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_disconnect_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.numberOfInputs attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfInputs_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfInputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.numberOfInputs attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfInputs_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfInputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioNode.numberOfInputs is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfInputs_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfInputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.numberOfOutputs attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfOutputs_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfOutputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.numberOfOutputs attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfOutputs_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfOutputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioNode.numberOfOutputs is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audionode_numberOfOutputs_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfOutputs" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.cancelScheduledValues method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_cancelScheduledValues_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="cancelScheduledValues" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.cancelScheduledValues is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_cancelScheduledValues_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="cancelScheduledValues" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.defaultValue attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_defaultValue_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="defaultValue" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.defaultValue attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_defaultValue_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="defaultValue" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.defaultValue is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_defaultValue_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="defaultValue" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.exponentialRampToValueAtTime method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_exponentialRampToValueAtTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="exponentialRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.exponentialRampToValueAtTime is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_exponentialRampToValueAtTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="exponentialRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.linearRampToValueAtTime method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_linearRampToValueAtTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="linearRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.linearRampToValueAtTime is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_linearRampToValueAtTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="linearRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setTargetAtTime method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setTargetAtTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setTargetAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.setTargetAtTime is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setTargetAtTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setTargetAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioProcessingEvent.inputBuffer attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_inputBuffer_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="inputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioProcessingEvent.inputBuffer attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_inputBuffer_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="inputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_inputBuffer_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="inputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioProcessingEvent.outputBuffer attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_outputBuffer_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="outputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioProcessingEvent.outputBuffer attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_outputBuffer_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="outputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioprocessingevent_outputBuffer_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="outputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.frequency attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_frequency_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.frequency attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_frequency_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of BiquadFilterNode.frequency is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_frequency_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.gain attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_gain_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.gain attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_gain_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of BiquadFilterNode.gain is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_gain_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.getFrequencyResponse method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_getFrequencyResponse_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFrequencyResponse" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of BiquadFilterNode.getFrequencyResponse is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_getFrequencyResponse_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFrequencyResponse" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.Q attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_Q_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="Q" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.Q attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_Q_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="Q" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of BiquadFilterNode.Q is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_Q_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="Q" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio3" type="js">
      <testcase purpose="Check if BiquadFilterNode.type attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_type_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="type" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of BiquadFilterNode.type is string" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="biquadfilternode_type_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="type" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ConvolverNode.buffer attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="convolvernode_buffer_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of ConvolverNode.buffer is AudioBuffer" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="convolvernode_buffer_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ConvolverNode.normalize attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="convolvernode_normalize_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="normalize" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of ConvolverNode.normalize is boolean" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="convolvernode_normalize_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="normalize" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DelayNode.delayTime attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="delaynode_delayTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="delayTime" interface="DelayNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DelayNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DelayNode.delayTime is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="delaynode_delayTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="delayTime" interface="DelayNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DelayNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.attack attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_attack_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="attack" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.attack attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_attack_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="attack" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.attack is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_attack_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="attack" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.knee attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_knee_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="knee" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.knee attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_knee_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="knee" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.knee is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_knee_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="knee" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.ratio attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_ratio_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="ratio" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.ratio attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_ratio_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="ratio" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.ratio is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_ratio_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="ratio" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.reduction attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_reduction_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="reduction" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.reduction attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_reduction_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="reduction" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.reduction is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_reduction_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="reduction" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.release attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_release_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="release" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.release attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_release_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="release" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.release is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_release_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="release" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.threshold attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_threshold_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="threshold" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DynamicsCompressorNode.threshold attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_threshold_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="threshold" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of DynamicsCompressorNode.threshold is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="dynamicscompressornode_threshold_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="threshold" interface="DynamicsCompressorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if GainNode.gain attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gainnode_gain_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if GainNode.gain attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gainnode_gain_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of GainNode.gain is object" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gainnode_gain_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OfflineAudioContext.oncomplete methodexists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="offlineaudiocontext_oncomplete_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="oncomplete" interface="OfflineAudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OfflineAudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OfflineAudioContext.startRendering method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="offlineaudiocontext_startRendering_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="startRendering" interface="OfflineAudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OfflineAudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.detune attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_detune_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="detune" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.detune attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_detune_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="detune" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of OscillatorNode.detune is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_detune_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="detune" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.frequency attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_frequency_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.frequency attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_frequency_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of OscillatorNode.frequency is AudioParam" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_frequency_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="frequency" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_setPeriodicWave_base">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of OscillatorNode.setPeriodicWave is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_setPeriodicWave_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.start method executes immediately" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_start_0">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_0.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_start_after_stop">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_after_stop.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="PLAYING_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.start method executes well with a double type argument" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_start_base">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="PLAYING_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of OscillatorNode.start is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_start_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="SCHEDULED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.stop method executes immediately" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_stop_0">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_0.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="SCHEDULED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.stop method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_stop_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="stop" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_stop_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="stop" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.type attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_type_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="type" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of OscillatorNode.type is string" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="oscillatornode_type_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="type" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.coneInnerAngle attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneInnerAngle_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneInnerAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.coneInnerAngle is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneInnerAngle_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneInnerAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.coneOuterAngle attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneOuterAngle_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.coneOuterAngle is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneOuterAngle_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.coneOuterGain attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneOuterGain_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterGain" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.coneOuterGain is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_coneOuterGain_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterGain" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.maxDistance is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_maxDistance_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.maxDistance is float" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_maxDistance_value">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.panningModel attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_panningModel_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="panningModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.refDistance is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_refDistance_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="refDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.refDistance is float" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_refDistance_value">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="refDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.rolloffFactor is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_rolloffFactor_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="rolloffFactor" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.rolloffFactor is float" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_rolloffFactor_value">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="rolloffFactor" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.setOrientation method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setOrientation_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.setOrientation is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setOrientation_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.setPosition method can change the position of a audio source" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setPosition_base">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.setPosition method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setPosition_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.setPosition is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setPosition_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of PannerNode.setVelocity is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="pannernode_setVelocity_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ScriptProcessorNode.bufferSize attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="scriptprocessornode_bufferSize_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="bufferSize" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ScriptProcessorNode.bufferSize attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="scriptprocessornode_bufferSize_readonly">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="bufferSize" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of ScriptProcessorNode.bufferSize is long" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="scriptprocessornode_bufferSize_value">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="bufferSize" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ScriptProcessorNode.onaudioprocess method can receive the processing event" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="scriptprocessornode_onaudioprocess_base">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="onaudioprocess" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if WaveShaperNode.curve attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="waveshapernode_curve_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="curve" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of WaveShaperNode.curve is Float32Array" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="waveshapernode_curve_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="curve" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setValueAtTime method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setValueAtTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.setValueAtTime is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setValueAtTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setValueCurveAtTime method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setValueCurveAtTime_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueCurveAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.setValueCurveAtTime is function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_setValueCurveAtTime_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueCurveAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.value attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_value_exists">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="value" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the type of AudioParam.value is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="audioparam_value_type">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="value" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio4" type="js">
      <testcase purpose="Check that the gain_node can be stringified" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gain-node-idl-test-06">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=6</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (0)" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gain-node-idl-test-08">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=8</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="gain-node-idl-test-09">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=9</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (1)" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gain-node-idl-test-10">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=10</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="gain-node-idl-test-11">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=11</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: gain_node must inherit property &quot;disconnect&quot; with the proper type (2)" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P1" id="gain-node-idl-test-12">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=12</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="gain-node-idl-test-13">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=13</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check that GainNode is properly scaling the gain" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="gain-node-test" onload_delay="15">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-test.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio5" type="js">
      <testcase purpose="Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="analysernode_frequencyBinCount_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement>FrequencyBinCount Half the FFT size</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.FINISHED_STATE value is 3" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiobuffersourcenode_FINISHED_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.FINISHED_STATE value is 3</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_FINISHED_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="audiobuffersourcenode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiobuffersourcenode_start_after_stop">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_after_stop.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception thrown when AudioBufferSourceNode.stop called twice" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiobuffersourcenode_stop_twice">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception thrown when AudioBufferSourceNode.stop called twice</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_twice.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createBuffer_three_numberOfChannels_upper">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_numberOfChannels_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createBuffer_three_sampleRate_lower">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_lower.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createBuffer_three_sampleRate_upper">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createDelayNode_no_argument">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createScriptProcessor_bufferSize_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiocontext_createwavetable_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiodestinationnode_numberOfChannels_upper">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioDestinationNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#attributes-AudioDestinationNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audiodestinationnode_numberOfChannels_zero">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_zero.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioDestinationNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#attributes-AudioDestinationNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.connect method,throw exception if input param set out-of-bound value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audionode_connect_input_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,throw exception if input param set out-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_input_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.connect method,throw exception if output param setout-of-bound value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audionode_connect_output_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,throw exception if output param setout-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audionode_disconnect_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_allvalues">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allvalues.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>Each BiquadFilterNode can be configured as one of a number of common filter types as shown in the IDL below</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_playbackState_basic">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_playbackState_basic.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>If 0 is passed in for this value or if the value is less than currentTime, then the sound will stop playing immediately</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.PLAYING_STATE attribute is number type" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_PLAYING_STATE_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.PLAYING_STATE attribute is number type</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>If 0 is passed in for this value or if the value is less than currentTime, then the sound will start playing immediately.</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.PLAYING_STATE attribute value is 2" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_PLAYING_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.PLAYING_STATE attribute value is 2</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>Either noteOn or noteGrainOn (but not both) may only be called one time and must be called before noteOff is called or an exception will be thrown</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_type_allvalues">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_allvalues.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>It may directly be set to any of the type constant values except for CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.type attribute can't be set to 'custom' value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_type_invalid_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute can't be set to 'custom' value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_invalid_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>It may directly be set to any of the type constant values except for CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="oscillatornode_type_setwavetable_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_setwavetable_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement>The setWaveTable() method can be used to set a custom waveform, which results in this attribute being set to CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="waveshapernode_curve_greater">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_greater.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement>Any sample value less greater than +1 will correspond to the last value in the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="waveshapernode_curve_less">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_less.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement>Any sample value less than -1 will correspond to the first value in the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="waveshapernode_curve_zero">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_zero.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement>Each input sample within this range will index into the shaping curve with a signal level of zero corresponding to the center value of the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audioparam_value_maxValue_upper">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_maxValue_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="audioparam_value_minValue_upper">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_minValue_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_allpass_phase">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allpass_phase.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>An allpass filter allows all frequencies through, but changes the phase relationship between the various frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_bandpass_above">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_bandpass_below">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_bandpass_center">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_center.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_highpass_above">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>Frequencies above the cutoff frequency are passed through</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_highpass_below">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>Frequencies above the cutoff frequency are passed through, but frequencies below the cutoff are attenuated</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_highshelf_attenuation">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>Frequency    The lower limit of the frequences where the boost (or attenuation) is applied</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_highshelf_boost">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The highshelf filter is the opposite of the lowshelf filter and allows all frequencies through, but adds a boost to the higher frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_lowpass_above">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>A lowpass filter allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_lowpass_below">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>A lowpass filter allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_lowshelf_attenuation">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The lowshelf filter allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_lowshelf_boost">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The lowshelf filter allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode notch filter allows all frequencies through" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_notch_all">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode notch filter allows all frequencies through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_all.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The notch filter (also known as a band-stop or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_notch_except">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_except.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The notch filter (also known as a band-stop or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_peaking_attenuation">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The peaking filter allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P3" id="biquadfilternode_type_peaking_boost">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion usage="true" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement>The peaking filter allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.fftSize attribute value is number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_fftSize_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.fftSize attribute value is number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="fftSize" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_getByteFrequencyData_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_getByteTimeDomainData_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getByteTimeDomainData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_getFloatFrequencyData_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFloatFrequencyData" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.maxDecibels attribute value is float" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_maxDecibels_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.maxDecibels attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.minDecibels attribute value is float" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_minDecibels_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.minDecibels attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="minDecibels" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AnalyserNode.smoothingTimeConstant attribute value is float" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="analysernode_smoothingTimeConstant_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.smoothingTimeConstant attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="smoothingTimeConstant" interface="AnalyserNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBuffer.getChannelData returns a Float32Arrays value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffer_getChannelData_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.getChannelData returns a Float32Arrays value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getChannelData" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception will be thrown when the parameter is bigger than numberOfChannels" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffer_getChannelData_exception">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception will be thrown when the parameter is bigger than numberOfChannels</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getChannelData" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBuffer.length is long value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffer_length_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.length is long value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="length" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBuffer.numberOfChannels is integer value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffer_numberOfChannels_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.numberOfChannels is integer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBuffer.sampleRate attribute is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffer_sampleRate_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBuffer.sampleRate attribute is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="sampleRate" interface="AudioBuffer" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBuffer</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_buffer_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="AudioBuffersourcenode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBufferSourceNode.loop default value is false" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loop_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.loop default value is false</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBufferSourceNode.loop is boolean value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loop_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.loop is boolean value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopEnd attribute default value is 0" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopEnd_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopEnd" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopEnd attribute is type of number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopEnd_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopEnd" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopEnd attribute set value 0.5" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopEnd_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute set value 0.5</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopEnd" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopStart attribute default value is 0" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopStart_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopStart" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopStart attribute is type of number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopStart_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopStart" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.loopStart attribute set value 0.5" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_loopStart_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute set value 0.5</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="loopStart" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.playbackRate.value default value is 1" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_playbackRate_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.playbackRate default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackRate" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBufferSourceNode.playbackState initial value is 0" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_playbackState_initial_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.playbackState initial value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_initial_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_playbackState_start_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_start_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.PLAYING_STATE value is 2" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_PLAYING_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.PLAYING_STATE value is 2</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_PLAYING_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="PLAYING_STATE" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_SCHEDULED_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_SCHEDULED_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="SCHEDULED_STATE" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an audio source plays when AudioBufferSourceNode.start method called" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_start_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an audio source plays when AudioBufferSourceNode.start method called</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="start" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an audio source ends when AudioBufferSourceNode.stop method called" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_stop_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an audio source ends when AudioBufferSourceNode.stop method called</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="stop" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiobuffersourcenode_UNSCHEDULED_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_UNSCHEDULED_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="UNSCHEDULED_STATE" interface="AudioBufferSourceNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioBufferSourceNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createAnalyser_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createAnalyser" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createBiquadFilter_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBiquadFilter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createBuffer_three_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBuffer" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createBuffer_two_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_two_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBuffer" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createBufferSource_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createBufferSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createChannelMerger_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelMerger" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createChannelMerger_no_argument">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelMerger" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createChannelSplitter_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelSplitter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createChannelSplitter_no_argument">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createChannelSplitter" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createConvolver method return value type of is ConvolverNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createConvolver_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createConvolver method return value type of is ConvolverNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createConvolver" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createDelayNode_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDelayNode" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createDynamicsCompressor_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createDynamicsCompressor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createGain method,return value type of is GainNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createGain_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createGain method,return value type of is GainNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createGain" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createMediaElementSource_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createMediaElementSource" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createOscillator method return value type of is OscillatorNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createOscillator_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createOscillator method return value type of is OscillatorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createOscillator" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createPanner method return value type of is PannerNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createPanner_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createPanner method return value type of is PannerNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createPanner" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_1024">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_1024.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_16384">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_16384.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_2048">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_2048.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_256">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_256.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_4096">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_4096.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_512">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_512.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_bufferSize_8192">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_8192.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createScriptProcessor_three_parameters">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_three_parameters.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createScriptProcessor" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createWaveShaper_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createWaveShaper" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createWaveShaper is of type method" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createWaveShaper_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createWaveShaper is of type method</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createWaveShaper" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.createwavetable method return value type of is WaveTable" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_createwavetable_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createwavetable method return value type of is WaveTable</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="createWaveTable" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiocontext_decodeAudioData_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="decodeAudioData" interface="AudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioContext</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiodestinationnode_numberOfChannels_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioDestinationNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#attributes-AudioDestinationNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioDestinationNode.numberOfChannels attribute default value is 2" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiodestinationnode_numberOfChannels_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute default value is 2</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="numberOfChannels" interface="AudioDestinationNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#attributes-AudioDestinationNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioListener.dopplerFactor default value is 1" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_dopplerFactor_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.dopplerFactor default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="dopplerFactor" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioListener.dopplerFactor is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_dopplerFactor_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.dopplerFactor is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="dopplerFactor" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setOrientation can change the direction of the listener" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_setOrientation_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setOrientation can change the direction of the listener</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_setPosition_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setPosition" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioListener.setVelocity can set the velocity vector of the listener" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_setVelocity_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setVelocity can set the velocity vector of the listener</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioListener.speedOfSound default value is 343.3" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_speedOfSound_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.speedOfSound default value is 343.3</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="speedOfSound" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioListener.speedOfSound is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audiolistener_speedOfSound_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.speedOfSound is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="speedOfSound" interface="AudioListener" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="check if AudioNode.connect method,no throw exception if input and output param not set" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audionode_connect_output_input_no_argument">
        <description>
          <steps>
            <step order="1">
              <step_desc>check if AudioNode.connect method,no throw exception if input and output param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_input_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="check if AudioNode.connect method,no throw exception if with three param basic usage" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audionode_connect_three_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>check if AudioNode.connect method,no throw exception if with three param basic usage</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_three_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.connect method,no throw exception if input param not set" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audionode_connect_two_arguments">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,no throw exception if input param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_two_arguments.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="connect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.disconnect method,no throw exception if input param set 0" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audionode_disconnect_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,no throw exception if input param set 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioNode.disconnect method,no throw exception if input param not set" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audionode_disconnect_no_argument">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,no throw exception if input param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="disconnect" interface="AudioNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#methodsandparams-AudioNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.cancelScheduledValues method executes well with float type parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_cancelScheduledValues_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.cancelScheduledValues method executes well with float type parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="cancelScheduledValues" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_exponentialRampToValueAtTime_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="exponentialRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_linearRampToValueAtTime_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="linearRampToValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_setTargetAtTime_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setTargetAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioprocessingevent_inputBuffer_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="inputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the AudioProcessingEvent.outBuffer is AudioBuffer value" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioprocessingevent_outputBuffer_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioProcessingEvent.outBuffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="outputBuffer" interface="AudioProcessingEvent" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.detune attribute exists and type and readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="biquadfilternode_detune_basic">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.detune attribute exists and type and readonly</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_detune_basic.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="detune" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="biquadfilternode_getFrequencyResponse_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="getFrequencyResponse" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if BiquadFilterNode.type attribute default value is 'lowpass'" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="biquadfilternode_type_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.type attribute default value is 'lowpass'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="type" interface="BiquadFilterNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the ConvolverNode.buffer is AudioBuffer value" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="convolvernode_buffer_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.buffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="buffer" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the ConvolverNode.normalize default value is true" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="convolvernode_normalize_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.normalize default value is true</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="normalize" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the ConvolverNode.normalize is boolean value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="convolvernode_normalize_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.normalize is boolean value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="normalize" interface="ConvolverNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DelayNode.delayTime attribute is readonly" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="delaynode_delayTime_readonly">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if DelayNode.delayTime attribute is readonly</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="delayTime" interface="DelayNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DelayNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if DelayNode.delayTime attribute default value is 0" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="delaynode_delayTime_value_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if DelayNode.delayTime attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_value_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="delayTime" interface="DelayNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if GainNode.gain.value default value is 1" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="gainnode_gain_value_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if GainNode.gain.value default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_value_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="gain" interface="GainNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OfflineAudioContext.oncomplete attribute is object type" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="offlineaudiocontext_oncomplete_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OfflineAudioContext.oncomplete attribute is object type</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="oncomplete" interface="OfflineAudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OfflineAudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OfflineAudioContext.startRendering method is type of function" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="offlineaudiocontext_startRendering_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OfflineAudioContext.startRendering method is type of function</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="startRendering" interface="OfflineAudioContext" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OfflineAudioContext-section</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.FINISHED_STATE attribute value is 3" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_FINISHED_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.FINISHED_STATE attribute value is 3</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_FINISHED_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="FINISHED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.SCHEDULED_STATE constant exists" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_SCHEDULED_STATE_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.SCHEDULED_STATE constant exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_SCHEDULED_STATE_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="SCHEDULED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.setWaveTable function exists" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_setWaveTable_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.setWaveTable function exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setWaveTable_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="playbackState" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.start method exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_start_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.start method exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="PLAYING_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.stop method executes well with double type parameter" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_stop_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.stop method executes well with double type parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="SCHEDULED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_stop_before_start">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_before_start.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setWaveTable" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="oscillatornode_UNSCHEDULED_STATE_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_UNSCHEDULED_STATE_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="UNSCHEDULED_STATE" interface="OscillatorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.coneInnerAngle is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_coneInnerAngle_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneInnerAngle is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneInnerAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.coneOuterAngle is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_coneOuterAngle_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneOuterAngle is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterAngle" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.coneOuterGain is float value" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_coneOuterGain_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneOuterGain is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="coneOuterGain" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.distanceModel default value is 'inverse'" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_distanceModel_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.distanceModel default value is 'inverse'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="distanceModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.distanceModel attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_distanceModel_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.distanceModel attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="distanceModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode .distanceModel set value 'exponential'" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_distanceModel_exponential">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode .distanceModel set value 'exponential'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exponential.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="distanceModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.distanceModel set value 'inverse'" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_distanceModel_inverse">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.distanceModel set value 'inverse'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_inverse.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="distanceModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.maxDistance attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_maxDistance_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.maxDistance attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="maxDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.panningModel default value is 1" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_panningModel_default_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="panningModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.panningModel attribute set value 'HRTF'" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_panningModel_HRTF">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel attribute set value 'HRTF'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_HRTF.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="panningModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.panningModel changed another value to position the audio in 3D space" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_panningModel_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel changed another value to position the audio in 3D space</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="panningModel" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.refDistance attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_refDistance_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.refDistance attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="refDistance" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.rolloffFactor attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_rolloffFactor_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.rolloffFactor attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="rolloffFactor" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.setOrientation can change the direction of the audio source" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_setOrientation_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.setOrientation can change the direction of the audio source</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setOrientation" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if the PannerNode.setVelocity can set the velocity vector of the audio source" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_setVelocity_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.setVelocity can set the velocity vector of the audio source</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if PannerNode.setVelocity function exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="pannernode_setVelocity_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.setVelocity function exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setVelocity" interface="PannerNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ScriptProcessorNode.bufferSize attribute is type of number" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="scriptprocessornode_bufferSize_type">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if ScriptProcessorNode.bufferSize attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="bufferSize" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if ScriptProcessorNode.onaudioprocess attribute exists" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="scriptprocessornode_onaudioprocess_exists">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if ScriptProcessorNode.onaudioprocess attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="onaudioprocess" interface="ScriptProcessorNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if WaveShaperNode.curve attribute value is Float32Array object" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="waveshapernode_curve_value">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve attribute value is Float32Array object</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="curve" interface="WaveShaperNode" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setValueAtTime method executes well with two float parameters" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_setValueAtTime_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.setValueCurveAtTime method executes well with three parameters" type="compliance" status="approved" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_setValueCurveAtTime_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setValueCurveAtTime method executes well with three parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="method" element_name="setValueCurveAtTime" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue" type="compliance" status="designed" component="WebAPI/Media/Web Audio API" execution_type="auto" priority="P2" id="audioparam_value_base">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="value" interface="AudioParam" specification="Web Audio API" section="Media" category="Tizen W3C API Specifications"/>
            <spec_url>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</spec_url>
            <spec_statement/>
          </spec>
        </specs>
      </testcase>
    </set>
  </suite>
</test_definition>
