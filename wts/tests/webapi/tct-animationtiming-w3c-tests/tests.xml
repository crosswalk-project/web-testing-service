<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-animationtiming-w3c-tests" category="W3C/HTML5 APIs">
    <set name="AnimationTiming" type="js">
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_exist" purpose="Check if window.cancelAnimationFrame is defined and not null.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_callback_03" purpose="Check whether window.requestAnimationFrame can return a valid callback handle.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_Callback_FrameRequestCallback_validCallbackHandle.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_exist_01" purpose="Check if window.requestAnimationFrame is defined and not null.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_exist.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_Callback_FrameRequestCallback_ignoreOptionalArgs" purpose="check if FrameRquestCallback ignores optional passed arguments">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_Callback_FrameRequestCallback_ignoreOptionalArgs.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_invokeSecondCallback" purpose="Check whether window.requestAnimationFrame can invoke second callback normally">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_invokeSecondCallback.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_AcceptInlineScript" purpose="Check whether window.requestAnimationFrame accepts inline script">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_AcceptInlineScript.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_Callback_FrameRequestCallback_validTimestamp" purpose="Check whether FrameRequestCallback contains a valid timestamp">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_Callback_FrameRequestCallback_validTimestamp.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_ignoreOptionalArgs" purpose="check if window.requestAnimationFrame performs callback when optional arguments are passed">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_ignoreOptionalArgs.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_Callback_FrameRequestCallback_multipleCalls" purpose="Multiple callback registrations occur.Callback 4 of 4">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_Callback_FrameRequestCallback_multipleCalls.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_NeedParameter" purpose="Check whether window.requestAnimationFrame expects parameter">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_NeedParameter.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_boolean" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter boolean">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Stop button</step_desc>
              <expected>A blue box moves from left to right, when click Stop button, the blue box won't stop</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_boolean-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_string" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter string">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Stop button</step_desc>
              <expected>A blue box moves from left to right, when click Stop button, the blue box won't stop</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_string-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_undefined" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter undefined">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Stop button</step_desc>
              <expected>A blue box moves from left to right, when click Stop button, the blue box won't stop</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_undefined-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_neg10" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter negative number">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Stop button</step_desc>
              <expected>A blue box moves from left to right, when click Stop button, the blue box won't stop</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_neg10-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_validhandle" purpose="Check window.cancelAnimationFrame can be called normally with the parameter returned by window.requestAnimationFrame">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the Stop button</step_desc>
              <expected>Anamition will stop</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_validhandle-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_cancelAnimationFrame" purpose="Check if window.cancelAnimationFrame and window.requestAnimationFrame invoked sucessfully">
        <description>
          <steps>
            <step order="1">
              <step_desc>Click the button Start and then click the button Stop</step_desc>
              <expected>A blue box will move from left to right while click the button Start. The blue box will stop while click the button Stop</expected>
            </step>
          </steps>
          <test_script_entry timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_cancelAnimationFrame-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="manual" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_singleAnimation" purpose="check if window.requestAnimationFrame only schedules a single animation">
        <description>
          <test_script_entry timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_singleAnimation-manual.html</test_script_entry>
        </description>
        </testcase>
      <testcase component="WebAPI/Performance and Optimization/Timing control for script-based animations" execution_type="auto" id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_hidden" purpose="Check if document's hidden attribute is false, window.requestAnimationFrame invoked sucessfully">
        <description>
          <test_script_entry timeout="90">/opt/tct-animationtiming-w3c-tests/animationtiming/AnimationTiming_WindowAnimationTiming_requestAnimationFrame_hidden.html</test_script_entry>
        </description>
        </testcase>
    </set>
  </suite>
</test_definition>
