<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-contact-tizen-tests" extension="crosswalk" category="Tizen Web Device APIs">
    <set name="Contact" type="js">
      <testcase purpose="Check if method AddressBook::addBatch() can add two times the same contact" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_two_oneIsNull">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_two_oneIsNull.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if you can add a blank contact by the method addBatch()" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_one_missNull">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_one_missNull.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if you can add a blank two contacts by the method addBatch()" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_two_bothNull">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_two_bothNull.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::addBatch(), param addresses has full set" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_addressesField_fullSet">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_addressesField_fullSet.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::addBatch() can add with two contactAddress" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_addressesField_multiple_type">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_addressesField_multiple_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::addBatch(), param ContactAddress has part set" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_addressesField_partSet">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_addressesField_partSet.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::addBatch() can add with three contactAddress" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_anniversaries_multiple">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_anniversaries_multiple.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::addBatch() can add with two ContactEmailAddress" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_emailsField_multiple">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_emailsField_multiple.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::add(), param nameField has full set" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_nameField_fullSet">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_nameField_fullSet.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::add(), param nameField has part set" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_nameField_partSet">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_nameField_partSet.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::add() can add with three notes" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_notes_multiple">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_notes_multiple.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if you can add a blank contact by the method add()" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_null">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method AddressBook::add() can add with three phoneNumbers" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_phoneNumbersField_multiple">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_phoneNumbersField_multiple.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if callback contactArraySuccessCallback is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactArraySuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if object contact differs from null" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManagerObject_attri_contact">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManagerObject_attri_contact.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getAddressBook() works properly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getAddressBook">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getAddressBook.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getAddressBooks() works properly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getAddressBooks">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getAddressBooks.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getDefaultAddressBook() works properly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getDefaultAddressBook">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getDefaultAddressBook.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getAddressBooks() with invalid param" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getAddressBooks_invalid">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getAddressBooks_invalid.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getAddressBook() with param null" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getAddressBook_NULL">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getAddressBook_NULL.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method ContactManager::getAddressBook() with invalid param" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactManager_getAddressBook_invalid">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactManager_getAddressBook_invalid.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method Contact::convertToString() works properly with enum" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactTextFormat_enum_VCARD_30">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactTextFormat_enum_VCARD_30.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method Contact::convertToString() with invalid param" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactTextFormat_enum_invalid">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactTextFormat_enum_invalid.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if can get contact after add and remove" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_remove_get">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_remove_get.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if can remove contact after add and get" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_get_remove">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_get_remove.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if can change ContactEmailAddress attribute: types" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactEmailAddress_emails_types">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactEmailAddress_emails_types.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if can change ContactPhoneNumber attribute: number and types" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ContactPhoneNumber_attri_number_types">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ContactPhoneNumber_attri_number_types.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for addressBookId attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_addressBookId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_addressBookId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for id attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_id_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_id_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check that the PersonsChangeCallback onpersonsupdated method working fine" component="TizenAPI/Social/Contact" execution_type="auto" id="PersonsChangeCallback_onpersonsupdated">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonsChangeCallback_onpersonsupdated.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check that the PersonsChangeCallback onpersonsadded method working fine" component="TizenAPI/Social/Contact" execution_type="auto" id="PersonsChangeCallback_onpersonsadded">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonsChangeCallback_onpersonsadded.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check that the PersonsChangeCallback onpersonsremoved method working fine" component="TizenAPI/Social/Contact" execution_type="auto" id="PersonsChangeCallback_onpersonsremoved">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonsChangeCallback_onpersonsremoved.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if find method called with missing non-optional argument throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments addBatch(valid_contacts, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments AddressBook addBatch(valid_contacts, valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBook::addChangeListener() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if addGroup() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addGroup_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addGroup_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if add() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if add() method called with invalid arguments throws an exception TypeMismatch" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_contact_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_contact_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if add() method adds a contact to the address book correctly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_contact_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_contact_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddessBook::find() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getGroup() method returns the group with the given identifier" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroup_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroup_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBook::get() method correctly returns the contact with the given identifier" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_get_check_fields">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_get_check_fields.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBook::removeBatch() called with invalid arguments throws an exceptions" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for AddressBook::removeBatch() method without successCallback" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_without_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_without_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for AddressBook::updateBatch() method without_successCallback" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_without_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_without_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if updateGroup() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if updateGroup() method invokes properly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup_ringtoneURI">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup_ringtoneURI.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBook::update() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_update_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_update_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactAddress() constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactEmailAddress() constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactGroup(name, ringtoneURI, photoURI) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for Contact() constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_constructor_ContactInit">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_constructor_ContactInit.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if Contact() constructor correctly initializes the contact object" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_constructor_VCARD">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_constructor_VCARD.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if tizen.contact (ContactManager) exists and implements methods" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_check_types">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_check_types.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactManager::addChangeListener() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_addChangeListener_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_addChangeListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactManager::find() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getAddressBooks() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for getAddressBooks() method in ContactManager" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_with_errorCallback_null">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_with_errorCallback_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for getAddressBooks() method in ContactManager interface" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_without_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_without_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactManager::removeBatch() method called with invalid arguments throws an exceptions" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactOrganization(orgInitDict) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactPhoneNumber(number, types, isDefault) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactWebSite() constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactWebSite_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactWebSite_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if convertToString() method called with invalid arguments throws an exception" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_convertToString_with_one">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_convertToString_with_one.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactRef exist" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactRef_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactRef_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if tizen.ContactAnniversary exists and is a function" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactAnniversary object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactManager::update() method called with invalid arguments throws an exceptions" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_update_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_update_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactAnniversary(date) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_constructor_minargs">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_constructor_minargs.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactAnniversary for date attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_date_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_date_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactAnniversary for label attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_label_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_label_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactRef(addressBookId, contactId) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactRef_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactRef_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactRef object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactRef_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactRef_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactRef for addressBookId attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactRef_addressBookId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactRef_addressBookId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactRef for contactId attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactRef_contactId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactRef_contactId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactAnniversary(date, label) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAnniversary_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAnniversary_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactName(ContactNameInit) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_constructor">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_constructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for displayName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_displayName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_displayName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactName exist" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactName object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for firstName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_firstName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_firstName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for lastName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_lastName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_lastName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for middleName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_middleName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_middleName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for nicknames attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_nicknames_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_nicknames_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for phoneticFirstName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_phoneticFirstName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_phoneticFirstName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for phoneticLastName attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_phoneticLastName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_phoneticLastName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for prefix attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_prefix_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_prefix_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactName for suffix attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactName_suffix_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactName_suffix_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactPhoneNumber(number) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_constructor_minargs">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_constructor_minargs.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactPhoneNumber exist" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactPhoneNumber for isDefault attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_isDefault_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_isDefault_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactPhoneNumber for number attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_number_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_number_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactPhoneNumber for types attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_types_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_types_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactPhoneNumber object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactPhoneNumber_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactPhoneNumber_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactGroup(name) constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_connstructor_minarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_connstructor_minarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if tizen.ContactGroup exists and is a function" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactGroup object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for name attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_name_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for ringtoneURI attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_ringtoneURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_ringtoneURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for photoURI attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_photoURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_photoURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactGroup for readOnly attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactGroup_readOnly_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactGroup_readOnly_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various arguments for ContactOrganization() constructor" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_constructor_minarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_constructor_minarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactOrganization for department attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_department_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_department_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactOrganization exist" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactOrganization object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactOrganization for logoURI attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_logoURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_logoURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactOrganization for name attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_name_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactOrganization for role attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_role_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_role_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check ContactOrganization for title attribute" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactOrganization_title_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactOrganization_title_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBook does not exist" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the AddressBook object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getGroups of AddressBook accepts extra argument" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroups_extra_argument">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroups_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getDefaultAddressBook of ContactManager accepts extra argument" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getDefaultAddressBook_extra_argument">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getDefaultAddressBook_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getUnifiedAddressBook of ContactManager accepts extra argument" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getUnifiedAddressBook_extra_argument">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getUnifiedAddressBook_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method clone of Contact accepts extra argument" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_clone_extra_argument">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_clone_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute id of AddressBook exists, has type AddressBookId and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_id_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_id_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute name of AddressBook exists, has type DOMString and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_name_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute readOnly of AddressBook exists, has type Boolean and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_readOnly_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_readOnly_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute email of ContactEmailAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_email_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_email_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute isDefault of ContactEmailAddress exists, has type Boolean" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_isDefault_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_isDefault_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute types of ContactEmailAddress exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_types_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_types_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute additionalInformation of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_additionalInformation_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_additionalInformation_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute city of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_city_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_city_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute country of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_country_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_country_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute isDefault of ContactAddress exists, has type Boolean" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_isDefault_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_isDefault_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute postalCode of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_postalCode_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_postalCode_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute region of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_region_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_region_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute streetAddress of ContactAddress exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_streetAddress_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_streetAddress_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute types of ContactAddress exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_types_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_types_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute type of ContactWebSite exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactWebSite_type_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactWebSite_type_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute url of ContactWebSite exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactWebSite_url_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactWebSite_url_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute addressBookId of Contact exists, has type AddressBookId and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_addressBookId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_addressBookId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute addresses of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_addresses_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_addresses_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute anniversaries of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_anniversaries_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_anniversaries_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute birthday of Contact exists, has type Date" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_birthday_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_birthday_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute emails of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_emails_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_emails_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute groupIds of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_groupIds_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_groupIds_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute id of Contact exists, has type ContactId and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_id_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_id_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute isFavorite of Contact exists, has type Boolean and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_isFavorite_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_isFavorite_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute lastUpdated of Contact exists, has type Date and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_lastUpdated_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_lastUpdated_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute name of Contact exists, has type ContactName" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_name_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute notes of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_notes_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_notes_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute organizations of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_organizations_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_organizations_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute personId of Contact exists, has type PersonId and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_personId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_personId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute phoneNumbers of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_phoneNumbers_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_phoneNumbers_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute photoURI of Contact exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_photoURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_photoURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute ringtoneURI of Contact exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_ringtoneURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_ringtoneURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute urls of Contact exists, has type Array" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_urls_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_urls_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute contactCount of Person exists, has type Number and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_contactCount_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_contactCount_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute displayContactId of Person exists, has type ContactId" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_displayContactId_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_displayContactId_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute displayName of Person exists, has type DOMString and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_displayName_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_displayName_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute hasEmail of Person exists, has type Boolean and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_hasEmail_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_hasEmail_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute hasPhoneNumber of Person exists, has type Boolean and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_hasPhoneNumber_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_hasPhoneNumber_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute id of Person exists, has type PersonId and is readonly" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_id_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_id_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute isFavorite of Person exists, has type Boolean" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_isFavorite_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_isFavorite_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute photoURI of Person exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_photoURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_photoURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if attribute ringtoneURI of Person exists, has type DOMString" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_ringtoneURI_attribute">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_ringtoneURI_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactAddress exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactEmailAddress exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if Contact exists" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactWebSite exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactWebSite_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactWebSite_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method add of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addBatch of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addChangeListener of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments addGroup(valid_group)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addGroup">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addGroup.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method find of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method get of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_get">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_get.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getGroup of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroup">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroup.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getGroups of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroups">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroups.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method remove of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_remove">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_remove.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeBatch of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeChangeListener of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeChangeListener">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method update of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_update">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_update.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateBatch of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateGroup of AddressBook works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addChangeListener of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_addChangeListener">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_addChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method find of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method get of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_get">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_get.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getAddressBook of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBook">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBook.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getAddressBooks of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getDefaultAddressBook of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getDefaultAddressBook">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getDefaultAddressBook.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getUnifiedAddressBook of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getUnifiedAddressBook">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getUnifiedAddressBook.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method remove of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_remove">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_remove.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeBatch of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeChangeListener of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeChangeListener">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method update of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_update">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_update.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateBatch of ContactManager works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method clone of Contact works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_clone">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_clone.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method convertToString of Contact works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_convertToString">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_convertToString.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method link of Person works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="Person_link">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_link.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method unlink of Person works properly." component="TizenAPI/Social/Contact" execution_type="auto" id="Person_unlink">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_unlink.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface AddressBookArraySuccessCallback exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_ArraySuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_ArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface ContactArraySuccessCallback exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactArraySuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface ContactManagerObject exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManagerObject_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManagerObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface ContactManager exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface PersonArraySuccessCallback exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="PersonArraySuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface Person exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="Person_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface PersonsChangeCallback exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="PersonsChangeCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonsChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addBatch of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addChangeListener of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addGroup of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addGroup_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addGroup_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method add of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_add_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_add_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method find of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getGroup of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroup_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroup_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getGroups of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_getGroups_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_getGroups_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method get of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_get_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_get_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeBatch of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeChangeListener of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeGroup of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeGroup_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeGroup_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method remove of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_remove_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_remove_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateBatch of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateGroup of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method update of AddressBook exists" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_update_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_update_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method addChangeListener of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_addChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_addChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method find of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getAddressBook of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBook_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBook_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getAddressBooks of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getDefaultAddressBook of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getDefaultAddressBook_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getDefaultAddressBook_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getUnifiedAddressBook of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getUnifiedAddressBook_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getUnifiedAddressBook_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method get of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_get_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_get_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeBatch of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method removeChangeListener of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method remove of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_remove_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_remove_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method updateBatch of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method update of ContactManager exists" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_update_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_update_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method clone of Contact exists" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_clone_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_clone_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method convertToString of Contact exists" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_convertToString_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_convertToString_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method link of Person exists" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_link_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_link_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method unlink of Person exists" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_unlink_exist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_unlink_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addBatch contacts conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_contacts_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_contacts_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addBatch successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addBatch errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addBatch errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addBatch successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addBatch_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check AddressBook_updateBatch with missing non-optional argument" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addChangeListener errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addChangeListener successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument contact conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_update_contact_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_update_contact_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateBatch successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ids conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_ids_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_ids_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook find errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook find successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateBatch contacts conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_contacts_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_contacts_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateBatch errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook removeBatch successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook removeBatch errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument addGroup conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addGroup_group_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addGroup_group_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateGroup contacts conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup_group_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup_group_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook find filter conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_filter_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_filter_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook sortMode filter conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_sortMode_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_sortMode_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument contact validation - use simple object" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_update_contact_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_update_contact_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments updateBatch(valid_contacts, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments updateBatch(valid_contacts, valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateBatch successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook updateBatch errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateBatch_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments removeBatch(valid_ids, valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments removeBatch(valid_ids, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook removeBatch errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook removeBatch successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments find(valid_successCallback, valid_errorCallback, valid_filter, valid_sortMode)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_with_sortMode">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_with_sortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments find(valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments AddressBook find(valid_successCallback, valid_errorCallback, valid_filter)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_with_filter">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_with_filter.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook find errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook find successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument sortMode validation - use simple object" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_sortMode_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_sortMode_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments addChangeListener(valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument AddressBook addChangeListener errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument successCallback validation - use simple function" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addChangeListener_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addChangeListener_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument addgroup validation - use simple object" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_addGroup_group_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_addGroup_group_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument updategroup validation - use simple object" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_updateGroup_group_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_updateGroup_group_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if callback is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactArraySuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="This object exists in tizen" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_in_tizen">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactManager object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if ContactManager::updateBatch() method called with invalid arguments throws an exceptions" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_missarg">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the Person object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="Person_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Person_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments  ContactManager.getAddressBooks(valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments getAddressBooks(valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_getAddressBooks_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_getAddressBooks_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument person conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_update_person_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_update_person_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments updateBatch(valid_personIds, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments updateBatch(valid_personIds, valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument  ContactManager updateBatch successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument persons conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_persons_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_persons_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager updateBatch errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager updateBatch successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_updateBatch_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_updateBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments removeBatch(valid_personIds, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments removeBatch(valid_personIds, valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager removeBatch errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager removeBatch personIds conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_personIds_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_personIds_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument  ContactManager removeBatch successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager removeBatch errorCallback validation - use {onerror: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager removeBatch successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments ContactManager find(valid_successCallback, valid_errorCallback, valid_filter, valid_sortMode)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_with_sortMode">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_with_sortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments find(valid_successCallback, valid_errorCallback, valid_filter)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_with_filter">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_with_filter.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments ContactManager find(valid_successCallback, valid_errorCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument sortMode conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_sortMode_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_sortMode_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager filter conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_filter_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_filter_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager find errorCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager find ContactManager successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager find successCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager find errorCallback validation - use {onsuccess: function (){}}" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager find sortMode validation - use simple object" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_sortMode_invalid_obj">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_sortMode_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager addChangeListener successCallback conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_addChangeListener_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_addChangeListener_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument ContactManager addChangeListener successCallback validation - use simple function" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_addChangeListener_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_addChangeListener_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the Contact object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument format conversions exception" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_convertToString_format_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_convertToString_format_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments convertToString(valid_format)" component="TizenAPI/Social/Contact" execution_type="auto" id="Contact_convertToString_with_format">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/Contact_convertToString_with_format.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactAddress object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactAddress_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactAddress_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactWebSite object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactWebSite_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactWebSite_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the ContactEmailAddress object is extendable" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactEmailAddress_extend">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactEmailAddress_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if callback oncontactsadded is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBookChangeCallback_oncontactsadded">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBookChangeCallback_oncontactsadded.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if callback oncontactsremoved is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBookChangeCallback_oncontactsremoved">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBookChangeCallback_oncontactsremoved.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if callback oncontactsupdated is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBookChangeCallback_oncontactsupdated">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBookChangeCallback_oncontactsupdated.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if PersonArraySuccessCallback is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="PersonArraySuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/PersonArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if AddressBookArraySuccessCallback is called and if its arguments have proper type" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBookArraySuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBookArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if removeGroup() method removes a group from the address book correctly" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeGroup">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeGroup.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if removeBatch() error callback will be invoked when used with wrong ids argument" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_removeBatch_errorCallback_invoked">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_removeBatch_errorCallback_invoked.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if find() error callback will be invoked when used with wrong filter argument" component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBook_find_errorCallback_invoked">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBook_find_errorCallback_invoked.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments ontactManager.removeBatch(valid_personIds, valid_successCallback)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_removeBatch_errorCallback_invoked">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_removeBatch_errorCallback_invoked.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check invoked arguments ContactManager.find(valid_successCallback, valid_errorCallback, valid_filter)" component="TizenAPI/Social/Contact" execution_type="auto" id="ContactManager_find_errorCallback_invoked">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/ContactManager_find_errorCallback_invoked.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if interface AddressBookChangeCallback exists, it should not." component="TizenAPI/Social/Contact" execution_type="auto" id="AddressBookChangeCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-contact-tizen-tests/contact/AddressBookChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
